{"version":3,"sources":["store.js"],"names":["_vue","_interopRequireDefault","require","_vuex","_Api","Vue","use","Vuex","store","Store","state","tweet","whois","tab","Number","mutations","SAVE_TWEET","SAVE_WHOIS","loadTweet","_ref","id","commit","self","this","Api","get","concat","then","result","data","urls","entities","hashtags","full_text","replace","i","url","expanded_url","text","error","Error","loadWhois","_ref2","length","push","console","_ref3"],"mappings":"yFAAA,IAAAA,KAAAC,uBAAAC,QAAA,QACAC,MAAAF,uBAAAC,QAAA,SACAE,KAAAH,uBAAAC,QAAA,4FAEAG,KAAAA,QAAIC,IAAIC,MAAAA,SAED,IAAMC,MAAQ,IAAID,MAAAA,QAAKE,MAAM,CANpCC,MAAA,CAQQC,MAAO,GAPfC,MAAA,GASQC,IAAKC,QAETC,UAAW,CACPC,WADO,SACIN,EAAOC,GACdD,EAAMC,MAAQA,GAElBM,WAJO,SAIIP,EAAOE,GAVLF,EAAIH,MAAAA,GAEjBI,SAIO,SALJD,EAAAG,GAEIH,EAFJG,IAAAA,IAKPE,QAAW,CAAAG,UAAA,SAAAC,EAAAC,GAAAD,EAAAE,OAAAF,EAAAT,MAAA,IAAAY,EAAAC,KANqBC,KAAAA,QAAAC,IAAA,WAAAC,OAAAN,IAiBvBO,KAAA,SAAAC,GAaO,IAAIjB,EAAQiB,EAAOC,KACbC,EAAOnB,EAAMoB,SAASD,KACtBE,EAAWrB,EAAMoB,SAASC,SATX,IAArBX,IAAAA,KAAqBS,EAAbpB,EAAauB,UAAAtB,EAAAsB,UAAAC,QAAAJ,EAAAK,GAAAC,IAAA,8BAAAV,OAAAI,EAAAK,GAAAE,aAAA,YAMrB,IAAA,IAAAF,KAAAH,EACYJ,EAAOC,UAAnBlB,EAAAsB,UAAAC,QAAA,IAAAF,EAAAG,GAAAG,KAAA,mCAAAZ,OAAAM,EAAAG,GAAAG,KAAA,YAKAhB,EAAcQ,OAAM,aAAAnB,KAnCJ,MAgDX,SAAA4B,GACL,MAAM,IAAIC,MAAM,gBAPfC,UApCN,SAAAC,GA2CK,IALA,IASJZ,EATIY,EAAAhC,MASSC,MAAMoB,SAASD,KAC5BlB,EAAQ,GATCS,EAAOE,KAIFiB,EAAM,EAAAL,EAAAL,EAAhBa,OAAAR,IAtBRX,KAAAA,QAAAC,IAAA,SAAAC,OAAAI,EAAAK,KAVCR,KAAA,SAAAC,GAAAhB,EAAAgC,KAAAhB,EAAAC,MAmCcgB,QAARnC,IAAQkB,EAAAC,MACJnB,EAAMC,OAAMoB,aAAvBnB,KA1BA,MA2BA,SAAA2B,GACW,MAAX,IAAAC,MAAA,gBAMQK,OAvDL,SAAAC,EAuDiBlB,GAAOC,EAAZR,OACPC,KAAKD,OAAO,WAAcT","file":"store.min.js","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        tweet: {},\n        whois: [],\n        tab: Number\n    },\n    mutations: {\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        loadTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/${id}`)\n                .then(function (result) {\n                    //Set variables\n                    var tweet = result.data;\n                    const urls = tweet.entities.urls;\n                    const hashtags = tweet.entities.hashtags;\n\n                    //For each URL, replace it with highlighted version\n                    for (let i in urls) {\n                        tweet.full_text = tweet.full_text.replace(urls[i].url, `<span class=\"highlightURL\">${urls[i].expanded_url}</span>`);\n                    }\n\n                    //For each hashtag, replace it with highlighted version\n                    for (let i in hashtags) {\n                        tweet.full_text = tweet.full_text.replace(\"#\" + hashtags[i].text, `<span class=\"highlightHashtag\">#${hashtags[i].text}</span>`)\n                    }\n\n                    //Assign modified tweet to state\n                    self.commit('SAVE_TWEET', tweet)\n\n                //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadWhois({state}) {\n            var urls = state.tweet.entities.urls;\n            var whois = [];\n            var self = this;\n\n            for (let i = 1; i < urls.length; i++ ) {\n                Api.get(`whois/${urls[i]}`)\n                .then(function (result) {\n                    whois.push(result.data);\n                    console.log(result.data);\n                    self.commit('SAVE_WHOIS', whois);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n            }\n         \n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"]}