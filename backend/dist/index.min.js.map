{"version":3,"sources":["index.js"],"names":["express","require","app","Twitter","cors","use","axios","consumer_key","process","env","TWITTER_CONSUMER_KEY","config","TWITTER_CONSUMER_SECRET","access_token_key","TWITTER_ACCESS_TOKEN_KEY","TWITTER_ACCESS_TOKEN_SECRET","consumer_secret","error","tweet","response","access_token_secret","id","req","res","tweet_mode","WHOIS_API_KEY","params","domain","then","data","err","console","log","send","googleTrends","dailyTrends","geo","results","get","interestOverTime","keyword","word","port","PORT","listen","concat"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,IAAAF,UACMA,KAAOC,QAAGA,QAGZE,QAAUF,QAAQ,WAFhBC,aAAND,QAAA,qBACIG,MAAOH,QAAQ,SACnBA,QAAIE,UAAUF,SAMdC,IAAIG,IAAID,QAHR,IAAIE,OAAQL,IAAOE,QAAA,CAOfI,aAAcC,QAAQC,IAAIC,qBAL9BT,gBAAkBU,QAAlBF,IAAAG,wBAOIC,iBAAkBL,QAAQC,IAAIK,yBAN9BT,oBAEJG,QAAAC,IAAAM,8BAGIC,IAAAA,IAAAA,yBAA6BJ,SAAAA,EAAAA,GAC7BC,OAAAA,IAAAA,gBAA8BC,CAAAA,GAAAA,EAAAA,OAAAA,GAAAA,WAHP,YAAA,SAAAG,EAAAC,EAAAC,GAIvBC,EAAAA,KAAAA,OAK8BC,IAAAA,IAAIC,qBAAN,SAAAA,EAAAC,GAAqBC,MAAAA,IAAAA,+DAAAA,OAAYhB,QAAAC,IAAAgB,cAAZD,kCAAAA,OAAYF,EAAAI,OAAAC,SAAcC,KAAA,SAAAT,GACvEI,EAASL,KAATC,EAAAU,QAD6CL,MAKrD,SAAAM,GAAA,OAAAC,QAAAC,IAAAF,OAIYP,IAAAA,IAAIU,yBAAJ,SAAAX,EAAAC,GAFRW,aAIWC,YAAG,CAAAC,IAAAd,EAAAI,OAAAU,MAAAR,KAAIG,SAAAA,GAJlBR,EAAAU,KAAAI,KAAA,MAaW,SAAUP,GALjBC,QAAAd,MAAA,2BAAwCa,OAIvC5B,IAHLoC,IAAA,6BAI0B,SAAAhB,EAAAC,GAClBQ,aAAAQ,iBAAc,CAAAC,QAAdlB,EAA0CQ,OAA1CW,OALRb,KAAA,SAAAS,GASJd,EAAAU,KAAAI,KAJYN,MAKJ,SAAAD,GACJI,QAAaK,MAAAA,2BAAiBT,OAKtBC,IAAAA,IAAAA,4BAAc,SAAAT,EAAAC,GALtBW,aAAAC,YAAA,CAAAK,QAAAlB,EAAAI,OAAAe,OASJb,KAAA,SAAAS,GAIYd,EAAIU,KAAKI,KAbjB,MAWaF,SAAAA,GAAoBJ,QAAML,MAAOe,2BAAAA,OAMzC,IANLC,KAAAlC,QAAAC,IAAAkC,MAAA,IAOHzC,IAED0C,OAAAF,KAAA,WAAA,OAAAX,QAAAC,IAAA,qBAAAa,OAAAH,KAAA","file":"index.min.js","sourcesContent":["//Import Dependencies\nconst express = require('express');\nconst app = express();\nvar cors = require('cors');\nvar Twitter = require('twitter');\nconst googleTrends = require('google-trends-api');\n\nvar axios = require('axios');\n\nrequire('dotenv').config();\napp.use(cors());\n\n//Use the Twitter NPM package\nconst client = new Twitter({\n    consumer_key: process.env.TWITTER_CONSUMER_KEY,\n    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n    access_token_key: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\n});\n\n// Get a Tweet by ID\napp.get('/api/twitter/tweet/:id', (req, res) => {\n    client.get(`statuses/show`, { id: req.params.id, tweet_mode: 'extended' }, function (error, tweet, response) {\n        res.send(tweet);\n    });\n})\n\n// Perform a whois lookup on a given domain\napp.get('/api/whois/:domain', (req, res) => {\n    axios.get(`https://www.whoisxmlapi.com/whoisserver/WhoisService?apiKey=${process.env.WHOIS_API_KEY}&outputFormat=JSON&domainName=${req.params.domain}`)\n        .then(response => {\n            res.send(response.data);\n        })\n        .catch(err => console.log(err));\n})\n\n// Get the daily trends for a given country\napp.get('/api/trends/daily/:geo', (req, res) => {\n    googleTrends.dailyTrends({geo: req.params.geo})\n        .then(results => {\n            res.send(results);\n        })\n        .catch(function (err) {\n            console.error('Oh no there was an error', err);\n        });\n})\n\n// Get the interest over time for a given word\napp.get('/api/trends/interest/:word', (req, res) => {\n    googleTrends.interestOverTime({keyword: req.params.word})\n        .then(results => {\n            res.send(results);\n        })\n        .catch(function (err) {\n            console.error('Oh no there was an error', err);\n        });\n})\n\n// Get related topics for a given word\napp.get('/api/trends/related/:word', (req, res) => {\n    googleTrends.dailyTrends({keyword: req.params.word})\n        .then(results => {\n            res.send(results);\n        })\n        .catch(function (err) {\n            console.error('Oh no there was an error', err);\n        });\n})\n\n//Start Server\nconst port = process.env.PORT || 3000;\napp.listen(port, () => console.log(`Listening on port ${port}...`));\n"]}