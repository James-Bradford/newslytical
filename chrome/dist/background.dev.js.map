{"version":3,"sources":["background.js"],"names":["chrome","tabs","onUpdated","addListener","tabId","changeInfo","tab","url","isTweet","onActiveChanged","query","active","currentWindow","activeTab","test","browserAction","setBadgeText","text","myRegexp","match","exec","tweetID","runtime","onConnect","port","postMessage","greeting","id"],"mappings":";;AAAA;;;;;;;AASAA,MAAM,CAACC,IAAP,CAAYC,SAAZ,CAAsBC,WAAtB;AAEI;;;;;;;AAOA,UAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,GAA7B,EAAkC;AAC9B,MAAID,UAAU,CAACE,GAAf,EAAoB;AAAEC,IAAAA,OAAO;AAAI;AACpC,CAXL;AAcAR,MAAM,CAACC,IAAP,CAAYQ,eAAZ,CAA4BN,WAA5B;AAEI;;;;;;;AAOA,UAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,GAA7B,EAAkC;AAC9BE,EAAAA,OAAO;AACV,CAXL;AAcA;;;;AAGA,SAASA,OAAT,GAAmB;AAEf;AACAR,EAAAA,MAAM,CAACC,IAAP,CAAYS,KAAZ,CAAkB;AAAEC,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,aAAa,EAAE;AAA/B,GAAlB,EAAyD,UAAUX,IAAV,EAAgB;AACrE,QAAIY,SAAS,GAAGZ,IAAI,CAAC,CAAD,CAApB;AACAM,IAAAA,GAAG,GAAGM,SAAS,CAACN,GAAhB;;AAGA,QAAI,sDAAsDO,IAAtD,CAA2DP,GAA3D,CAAJ,EAAqE;AACjEP,MAAAA,MAAM,CAACe,aAAP,CAAqBC,YAArB,CAAkC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAlC;AACAC,MAAAA,QAAQ,GAAG,uDAAX;AACAC,MAAAA,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcb,GAAd,CAAR;AACAc,MAAAA,OAAO,GAAIF,KAAK,CAAC,CAAD,CAAhB;AAEAnB,MAAAA,MAAM,CAACsB,OAAP,CAAeC,SAAf,CAAyBpB,WAAzB,CAAqC,UAAUqB,IAAV,EAAgB;AACjDA,QAAAA,IAAI,CAACC,WAAL,CAAiB;AAAEC,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,EAAE,EAAEN;AAAzB,SAAjB;AACH,OAFD;AAIH,KAVD,MAUO;AACHrB,MAAAA,MAAM,CAACe,aAAP,CAAqBC,YAArB,CAAkC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAlC;AACAjB,MAAAA,MAAM,CAACsB,OAAP,CAAeC,SAAf,CAAyBpB,WAAzB,CAAqC,UAAUqB,IAAV,EAAgB;AACjDA,QAAAA,IAAI,CAACC,WAAL,CAAiB;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAjB;AACH,OAFD;AAGH;AACJ,GArBD;AAwBH","sourcesContent":["/**\n * Summary. Background Functions\n * Description. Provides the background functions for the Chrome Extension\n * \n * @author James Bradford\n * @version 1.0\n */\n\n\nchrome.tabs.onUpdated.addListener(\n\n    /**\n     * If the tab has changed, perform isTweet()\n     * \n     * @param {*} tabId ID of Current Tab\n     * @param {*} changeInfo Info from Changed Tab\n     * @param {*} tab Specific Tab\n     */\n    function (tabId, changeInfo, tab) {\n        if (changeInfo.url) { isTweet() }\n    });\n\n\nchrome.tabs.onActiveChanged.addListener(\n\n    /**\n     * If the tab has changed, perform isTweet()\n     * \n     * @param {*} tabId ID of Current Tab\n     * @param {*} changeInfo Info from Changed Tab\n     * @param {*} tab Specific Tab\n     */\n    function (tabId, changeInfo, tab) {\n        isTweet()\n    });\n\n\n/**\n * If current tab contains a tweet, pass message to popup.js\n */\nfunction isTweet() {\n\n    //Get Active Tab URL\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n        var activeTab = tabs[0];\n        url = activeTab.url;\n\n\n        if (/^(https|http)?:?\\/?\\/?twitter.com\\/.*\\/status\\/\\d*$/.test(url)) {\n            chrome.browserAction.setBadgeText({ text: \"1\" });\n            myRegexp = /^(https|http)?:?\\/?\\/?twitter.com\\/.*\\/status\\/(\\d*)$/;\n            match = myRegexp.exec(url);\n            tweetID = (match[2]);\n\n            chrome.runtime.onConnect.addListener(function (port) {\n                port.postMessage({ greeting: \"tweet\", id: tweetID });\n            });\n\n        } else {\n            chrome.browserAction.setBadgeText({ text: \"\" });\n            chrome.runtime.onConnect.addListener(function (port) {\n                port.postMessage({ greeting: \"no\" });\n            });\n        }\n    });\n\n\n}\n"],"file":"background.dev.js"}