{"version":3,"sources":["store.js"],"names":["_vue","_interopRequireDefault","require","_vuex","_Api","Vue","use","Vuex","store","Store","state","rawTweet","tweet","twitterTrendsUS","twitterTrendsUK","whois","tab","Number","SAVE_RAW_TWEET","twitterTrends","SAVE_TWITTER_TRENDS_UK","actions","loadRawTweet","_ref","id","commit","self","this","Api","get","concat","then","result","data","error","Error","loadTweet","_ref2","urls","entities","hashtags","i","full_text","expanded_url","replace","text","loadTwitterTrends","setTab","_ref3"],"mappings":"yFAAA,IAAAA,KAAAC,uBAAAC,QAAA,QACAC,MAAAF,uBAAAC,QAAA,SACAE,KAAAH,uBAAAC,QAAA,4FAEAG,KAAAA,QAAIC,IAAIC,MAAAA,SAED,IAAMC,MAAQ,IAAID,MAAAA,QAAKE,MAAM,CANpCC,MAAA,CAQQC,SAAU,GAPlBC,MAAA,GASQC,gBAAiB,GARzBC,gBAAA,GAUQC,MAAO,GACPC,IAAKC,QATbZ,UAAAA,CAYQa,eAZRb,SAYuBK,EAAOC,GAVTD,EAAIH,SAAAA,GAEjBI,WAJRN,SAGWK,EAAAE,GAEIF,EAFJE,MAAAA,GAIHE,uBAPRT,SAGWK,EAAAS,GAKIT,EALJG,gBAAAM,GADyBC,uBAFpCf,SAEoCK,EAAAS,GASvBT,EAAEI,gBAAAK,GAEHT,WAbZL,SAakBM,EAAWA,GAFdD,EAAAK,MAAAA,GAKHL,SAhBZL,SAgBYK,EAAcE,GALXF,EAAAM,IAAAA,IASNK,QATM,CAAAC,aAAA,SAAAC,EAAAC,GAAAD,EAAAE,OAAA,IAAAC,EAAAC,KATqBC,KAAAA,QAAAC,IAAA,iBAAAC,OAAAN,IA6BvBO,KAAA,SAAAC,GAaON,EAAKD,OAAO,iBAAkBO,EAAOC,QA1CrB,MA6CX,SAAAC,GAhBZ,MAAA,IAAAC,MAAA,gBAUDC,UA9BG,SAAAC,EA8BHb,GAAAa,EAAAZ,OAAAY,EAAA3B,MAAA,IAVCgB,EAAAC,KA6BDC,KAAAA,QAAIC,IAAJ,iBAAAC,OAAyBN,IACpBO,KAAK,SAAUC,GAEZ,IAAIpB,EAAQoB,EAAOC,KAhC1BK,EAAA1B,EAAA2B,SAyB4BD,KAArBb,EAAqBb,EAAA2B,SAAAC,SAYrB,IAAK,IAAIC,KAAKH,EARlBT,EAAJa,UAAA9B,EAAA8B,UACKX,QAAKO,EAAUN,GAAAA,IADpB,8BAAAF,OAC4BQ,EAAAG,GAAAE,aAD5B,YAKsB,IAAG/B,IAAM2B,KAAAA,EASnB3B,EAAM8B,UAAY9B,EAAM8B,UAAUE,QAAQ,IAAMJ,EAASC,GAAGI,KAA1C,mCAAAf,OAAmFU,EAASC,GAAGI,KAA/F,YAItBnB,EAAKD,OAAO,aAAcb,KAlBlC,MAcY,SAAAsB,GAGJ,MAAA,IAAAC,MAAA,gBACAT,kBAnEL,WAiDH,IAAAA,EAqBaC,KArBbC,KAAAA,QAAAC,IAAA,0BA7BCE,KAAA,SAAAC,GAsDLc,EAtDKrB,OAAA,4BA6BD,MA0BA,SAAAS,GAMQ,MAAM,IAAIC,MAAM,eAFZP,KAAAA,QAACH,IAAD,wBAFZM,KAGa,SAAAG,GACKC,EAAMV,OAAA,2BAFZ,MAFZ,SAAAS,GAUQ,MAAM,IAAIC,MAAM,gBAJxBY,OAnFG,SAAAC,EAsFUhC,GAAAkB,EAHbT,OAIQE,KAAMF,OAAU,WAAhBT","file":"store.min.js","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        twitterTrendsUS: {},\n        twitterTrendsUK: {},\n        whois: [],\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_TWITTER_TRENDS_US(state, twitterTrends) {\n            state.twitterTrendsUS = twitterTrends;\n        },\n        SAVE_TWITTER_TRENDS_UK(state, twitterTrends) {\n            state.twitterTrendsUK = twitterTrends;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n        * Call API to load Tweet and highlight\n        * @param {*} param0 \n        * @param {*} id \n        */\n        loadRawTweet({commit}, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        loadTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n                    //Set variables\n                    var tweet = result.data;\n                    const urls = tweet.entities.urls;\n                    const hashtags = tweet.entities.hashtags;\n\n                    //For each URL, replace it with highlighted version\n                    for (let i in urls) {\n                        tweet.full_text = tweet.full_text.replace(urls[i].url, `<span class=\"highlightURL\">${urls[i].expanded_url}</span>`);\n                    }\n\n                    //For each hashtag, replace it with highlighted version\n                    for (let i in hashtags) {\n                        tweet.full_text = tweet.full_text.replace(\"#\" + hashtags[i].text, `<span class=\"highlightHashtag\">#${hashtags[i].text}</span>`)\n                    }\n\n                    //Assign modified tweet to state\n                    self.commit('SAVE_TWEET', tweet)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadTwitterTrends() {\n            var self = this;\n\n            Api.get(`twitter/trends/2459115`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_US')\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n            Api.get(`twitter/trends/44418`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TENDS_UK')\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"]}