{"version":3,"sources":["store.js"],"names":["_vue","_interopRequireDefault","require","_vuex","_Api","_psl","Vue","use","Vuex","store","Store","state","rawTweet","tweet","twitterTrendsUS","twitterTrendsUK","whois","tab","Number","mutations","SAVE_TWEET","SAVE_TWITTER_TRENDS_UK","SAVE_RAW_TWEET","id","_ref","self","this","Api","get","concat","then","result","commit","data","error","Error","loadTweet","dispatch","entities","i","urls","length","url","expanded_url","hostname","indexOf","split","extractedUrl","psl","push","loadTwitterTrendsUK","loadTwitterTrendsUS","setTab","_ref4"],"mappings":"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","file":"store.min.js","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\nimport psl from \"psl\";\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        twitterTrendsUS: [],\n        twitterTrendsUK: [],\n        whois: null,\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_TWITTER_TRENDS_US(state, twitterTrendsUS) {\n            state.twitterTrendsUS = twitterTrendsUS;\n        },\n        SAVE_TWITTER_TRENDS_UK(state, twitterTrendsUK) {\n            state.twitterTrendsUK = twitterTrendsUK;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n        * Call API to load Tweet and highlight\n        * @param {*} param0 \n        * @param {*} id \n        */\n        loadRawTweet({ commit }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        async loadTweet({ commit, dispatch }, id) {\n\n            //Assign modified tweet to state\n            await Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n                    commit('SAVE_TWEET', result.data);\n                    //Throw error if needed\n                }).then(function () {\n                    dispatch('loadWhois');\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n\n\n        },\n        async loadWhois({ commit, state }) {\n\n\n            var urls = state.tweet.entities.urls;\n            var whois = [];\n\n            //Performs whois on each hostname in Tweet\n            for (let i = 0; i < urls.length; i++) {\n\n                var url = urls[i].expanded_url;\n                var hostname;\n                //find & remove protocol (http, ftp, etc.) and get hostname\n\n                if (url.indexOf(\"//\") > -1) {\n                    hostname = url.split(\"/\")[2];\n                } else {\n                    hostname = url.split(\"/\")[0];\n                }\n\n                //find & remove port number\n                hostname = hostname.split(\":\")[0];\n                //find & remove \"?\"\n                hostname = hostname.split(\"?\")[0];\n\n                //Extract hostname\n                var extractedUrl = psl.get(hostname);\n\n                //Make API call\n                await Api.get(`whois/${extractedUrl}`)\n                    .then(function (result) {\n\n                        //Add result to array\n                        whois.push(result.data);\n                    })\n                    .catch(error => {\n                        throw new Error(\"API ERROR\");\n                    });\n            }\n\n            //Assign local variable\n            commit('SAVE_WHOIS', whois);\n        },\n        loadTwitterTrendsUK() {\n            var self = this;\n\n            Api.get(`twitter/trends/44418`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_UK', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadTwitterTrendsUS() {\n            var self = this;\n\n            Api.get(`twitter/trends/2459115`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_US', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"]}