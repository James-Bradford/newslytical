{"version":3,"sources":["store.js"],"names":["_vue","_interopRequireDefault","require","_vuex","_Api","_psl","Vue","use","Vuex","store","Store","state","rawTweet","tweet","twitterTrendsUS","twitterTrendsUK","whois","tab","Number","mutations","SAVE_TWEET","SAVE_TWITTER_TRENDS_UK","SAVE_RAW_TWEET","id","_ref","self","this","Api","get","concat","then","result","commit","data","error","Error","loadTweet","_ref2","urls","entities","hashtags","i","full_text","replace","url","expanded_url","text","hostname","indexOf","length","split","psl","push","loadTwitterTrendsUK","_ref3"],"mappings":"yFAAA,IAAAA,KAAAC,uBAAAC,QAAA,QACAC,MAAAF,uBAAAC,QAAA,SACAE,KAAAH,uBAAAC,QAAA,oBACAG,KAAAJ,uBAAAC,QAAA,gFAEAI,KAAAA,QAAIC,IAAIC,MAAAA,SALR,IAAAC,MAAA,IAAAD,MAAAA,QAAAE,MAAA,CAQIC,MAAO,CAPXC,SAAA,GASQC,MAAO,GARfC,gBAAA,GAUQC,gBAAiB,GATzBC,MAAA,KAWQC,IAAKC,QAETC,UAAW,CAXfb,eAWe,SAXPE,EAAAA,GAaIG,EAAMC,SAAWA,GAVpBQ,WAQM,SARJT,EAAAE,GACKF,EADLE,MAAAA,GAGHC,uBAKO,SARJH,EAAAG,GAIHC,EAAAA,gBAJGD,GAMAO,uBAEI,SAFFH,EAAAA,GAPuBP,EAAAI,gBAAAA,GAU5BO,WADO,SAAAX,EAAAK,GAEGJ,EAAAA,MAAWA,GAErBQ,SAJO,SAAAT,EAAAM,GAKGJ,EAANI,IAAcJ,IAGdF,QAAMG,CAMNH,aANMG,SAAAA,EAMNS,GAAAC,EAAcR,OAAd,IAdGS,EAAAC,KAkBNC,KAAAA,QAAAC,IAAA,iBAAAC,OAAAN,IA3B2BO,KAAA,SAAAC,GA8B5BN,EAAAO,OAAA,iBAAAD,EAAAE,QAHC,MAkBgB,SAAAC,GACL,MAAM,IAAIC,MAAM,gBAAhBC,UA7BFtB,SAAAA,EA6BES,GAAAc,EAAUF,OAAVE,EAAgB1B,MAAhB,IAPRc,EAAAC,KAVCb,EAAA,GA4BGyB,EAAO,GARftB,EAAA,GAYIW,KAAAA,QAAIC,IAAJ,iBAAAC,OAAyBN,IACpBO,KAAK,SAAUC,GARSlB,EAArBmB,EAAqBC,KAAAK,EAAb3B,EAAa4B,SAAAD,KAClB,IAAXE,EAAA3B,EAAA0B,SAAAC,SAGA,IAEA,IAAAC,KAAAH,EAUYzB,EAAM6B,UAAY7B,EAAM6B,UAAUC,QAAQL,EAAKG,GAAGG,IAAhC,8BAAAf,OAAmES,EAAKG,GAAGI,aAA3E,YALV,IAACN,IAANE,KAAPD,EACiB3B,EAAM0B,UAASC,EAEhCE,UAAAC,QAAA,IAAAH,EAAAC,GAAAK,KAFgCN,mCAAAA,OAEhCA,EAAAC,GAAAK,KAFgCN,YAOhCf,EAAAO,OAAA,aAAAnB,KAZR,MAasB2B,SAAAA,GACJE,MAAN,IAAkB7B,MAAM6B,eAIxB,IAACV,IAAOS,EAAA,EAAAA,EAAZH,EAA0BzB,OAE1B4B,IAAA,CAEM,IAAIN,EAkBdY,GANIA,GARRA,GAK6B,EAArBH,EAAII,QAAQ,MALKC,EAAAA,MAAS,KAAI,GAQnBL,EAAIM,MAAM,KAAK,IAAAA,MAA1B,KAAA,IAMgBA,MAAM,KAAK,GAG/B,IAAIN,EAAMO,KAAAA,QAAIvB,IAAImB,GAAXpB,KAAAA,QAAGwB,IAAH,SAAAtB,OAAGsB,IAILrB,KAAK,SAAUC,GAEZf,EAAAoC,KAAArB,EAAAE,QAND,MASI,SAAAC,GACOC,MAAM,IAAAA,MAAhB,eAKHH,KAAOA,OAAA,aAAZhB,IAEJqC,oBAxGMvC,WAyGM,IAAGW,EAAXC,KAEAC,KAAAA,QAAAA,IAAAA,wBAEoBG,KAAA,SAAAC,GACPN,EAAAS,OAAS,yBAAAH,EAAAE,QAHtBN,MAIwB,SAAAO,GAJxB,MAAA,IAAAC,MAAA,gBAQIV,oBAnHFX,WAmHF,IAAIW,EAAOC,KAIEM,KAAAA,QAAOJ,IAAPI,0BACAF,KAAA,SAASC,GACEN,EAAAO,OAAhB,yBAAAD,EAAAE,QAFKD,MAFb,SAAAE,GAzGH,MAAA,IAAAC,MAAA,gBAiHQH,OA7HHlB,SAAAA,EA6HsBG,GAAxBqC,EAAYtB,OACfN,KAAAM,OAAA,WAAAf","file":"store.min.js","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\nimport psl from \"psl\";\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        twitterTrendsUS: [],\n        twitterTrendsUK: [],\n        whois: null,\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_TWITTER_TRENDS_US(state, twitterTrendsUS) {\n            state.twitterTrendsUS = twitterTrendsUS;\n        },\n        SAVE_TWITTER_TRENDS_UK(state, twitterTrendsUK) {\n            state.twitterTrendsUK = twitterTrendsUK;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n        * Call API to load Tweet and highlight\n        * @param {*} param0 \n        * @param {*} id \n        */\n        loadRawTweet({ commit }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        loadTweet({ commit, state }, id) {\n            var self = this;\n            var tweet = {};\n            var urls = [];\n            var whois = [];\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n                    //Set variables\n                    tweet = result.data;\n                    urls = tweet.entities.urls;\n                    const hashtags = tweet.entities.hashtags;\n\n                    //For each URL, replace it with highlighted version\n                    for (let i in urls) {\n                        tweet.full_text = tweet.full_text.replace(urls[i].url, `<span class=\"highlightURL\">${urls[i].expanded_url}</span>`);\n                    }\n\n                    //For each hashtag, replace it with highlighted version\n                    for (let i in hashtags) {\n                        tweet.full_text = tweet.full_text.replace(\"#\" + hashtags[i].text, `<span class=\"highlightHashtag\">#${hashtags[i].text}</span>`)\n                    }\n\n                    //Assign modified tweet to state\n                    self.commit('SAVE_TWEET', tweet)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n\n            //Performs whois on each hostname in Tweet\n            for (let i = 0; i < urls.length; i++) {\n\n                var hostname;\n                //find & remove protocol (http, ftp, etc.) and get hostname\n\n                if (url.indexOf(\"//\") > -1) {\n                    hostname = url.split(\"/\")[2];\n                } else {\n                    hostname = url.split(\"/\")[0];\n                }\n\n                //find & remove port number\n                hostname = hostname.split(\":\")[0];\n                //find & remove \"?\"\n                hostname = hostname.split(\"?\")[0];\n\n                //Extract hostname\n                var url = psl.get(hostname);\n\n                //Make API call\n                Api.get(`whois/${url}`)\n                    .then(function (result) {\n\n                        //Add result to array\n                        whois.push(result.data);\n                    })\n                    .catch(error => {\n                        throw new Error(\"API ERROR\");\n                    });\n                }\n\n                //Assign local variable\n                this.commit('SAVE_WHOIS', whois);\n            },\n            loadTwitterTrendsUK() {\n                var self = this;\n\n                Api.get(`twitter/trends/44418`)\n                    .then(function (result) {\n                        self.commit('SAVE_TWITTER_TRENDS_UK', result.data);\n                    }).catch(error => {\n                        throw new Error(\"API ERROR\");\n                    });\n            },\n            loadTwitterTrendsUS() {\n                var self = this;\n\n                Api.get(`twitter/trends/2459115`)\n                    .then(function (result) {\n                        self.commit('SAVE_TWITTER_TRENDS_US', result.data);\n                    }).catch(error => {\n                        throw new Error(\"API ERROR\");\n                    });\n            },\n            setTab({ commit }, tab) {\n                this.commit('SAVE_TAB', tab);\n            }\n        }\n    });"]}