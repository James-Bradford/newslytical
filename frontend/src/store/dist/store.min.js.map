{"version":3,"sources":["store.js"],"names":["_vue","_interopRequireDefault","require","_vuex","_Api","_psl","Vue","use","Vuex","store","Store","state","rawTweet","tweet","twitterTrendsUS","twitterTrendsUK","whois","isLoading","tab","Number","SAVE_RAW_TWEET","SAVE_TWITTER_TRENDS_UK","SAVE_TWEET","SAVE_TWITTER_TRENDS_US","commit","get","id","then","result","data","error","Error","loadTweet","dispatch","Api","concat","loadWhois","urls","entities","i","url","expanded_url","hostname","indexOf","split","extractedUrl","push","self","this","loadTwitterTrendsUS","setTab","_ref4"],"mappings":"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","file":"store.min.js","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\nimport psl from \"psl\";\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        twitterTrendsUS: [],\n        twitterTrendsUK: [],\n        whois: null,\n        isLoading: false,\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_TWITTER_TRENDS_US(state, twitterTrendsUS) {\n            state.twitterTrendsUS = twitterTrendsUS;\n        },\n        SAVE_TWITTER_TRENDS_UK(state, twitterTrendsUK) {\n            state.twitterTrendsUK = twitterTrendsUK;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        TOGGLE_IS_LOADING(state) {\n            state.isLoading = !state.isLoading;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n        * Call API to load Tweet and highlight\n        * @param {*} param0 \n        * @param {*} id \n        */\n        loadRawTweet({ commit }, id) {\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n\n                    commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        async loadTweet({ commit, dispatch }, id) {\n\n            //Assign modified tweet to state\n            await Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n                    commit('SAVE_TWEET', result.data);\n                    //Throw error if needed\n                }).then(function () {\n                    dispatch('loadWhois');\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n\n\n        },\n        async loadWhois({ commit, state }) {\n\n\n            var urls = state.tweet.entities.urls;\n            var whois = [];\n\n            //Performs whois on each hostname in Tweet\n            for (let i = 0; i < urls.length; i++) {\n\n                var url = urls[i].expanded_url;\n                var hostname;\n                //find & remove protocol (http, ftp, etc.) and get hostname\n\n                if (url.indexOf(\"//\") > -1) {\n                    hostname = url.split(\"/\")[2];\n                } else {\n                    hostname = url.split(\"/\")[0];\n                }\n\n                //find & remove port number\n                hostname = hostname.split(\":\")[0];\n                //find & remove \"?\"\n                hostname = hostname.split(\"?\")[0];\n\n                //Extract hostname\n                var extractedUrl = psl.get(hostname);\n\n                //Make API call\n                await Api.get(`whois/${extractedUrl}`)\n                    .then(function (result) {\n\n                        //Add result to array\n                        whois.push(result.data);\n                    })\n                    .catch(error => {\n                        throw new Error(\"API ERROR\");\n                    });\n            }\n\n            //Assign local variable\n            commit('SAVE_WHOIS', whois);\n        },\n        loadTwitterTrendsUK() {\n            var self = this;\n\n            Api.get(`twitter/trends/44418`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_UK', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadTwitterTrendsUS() {\n            var self = this;\n\n            Api.get(`twitter/trends/2459115`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_US', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"]}