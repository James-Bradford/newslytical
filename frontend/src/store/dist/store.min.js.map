{"version":3,"sources":["store.js"],"names":["_vue","_interopRequireDefault","require","_vuex","_Api","Vue","use","Vuex","store","Store","state","rawTweet","tweet","whois","tab","Number","mutations","SAVE_RAW_TWEET","SAVE_TAB","actions","loadRawTweet","_ref","id","commit","self","this","Api","get","concat","then","result","data","error","Error","loadTweet","_ref2","urls","entities","hashtags","i","full_text","replace","url","expanded_url","text","setTab","_ref3"],"mappings":"yFAAA,IAAAA,KAAAC,uBAAAC,QAAA,QACAC,MAAAF,uBAAAC,QAAA,SACAE,KAAAH,uBAAAC,QAAA,4FAEAG,KAAAA,QAAIC,IAAIC,MAAAA,SAED,IAAMC,MAAQ,IAAID,MAAAA,QAAKE,MAAM,CANpCC,MAAA,CAQQC,SAAU,GAPlBC,MAAA,GASQC,MAAO,GARfC,IAAAC,QAWIC,UAAW,CACPC,eADO,SACQP,EAAOC,GAV9BN,EAAIC,SAAIC,GAEKC,WAOE,SAPUD,EAAAA,GACdG,EAAAE,MAAAA,GAEHA,WAIO,SANJF,EAAAG,GAGIH,EAHJG,MAAAA,GADyBK,SAOrB,SAPqBR,EAAAI,GAOvBJ,EAAEI,IAAAA,IAGNK,QAHM,CAAAC,aAAA,SAAAC,EAAAC,GAAAD,EAAAE,OAAAF,EAAAX,MAAA,IAAAc,EAAAC,KAPqBC,KAAAA,QAAAC,IAAA,WAAAC,OAAAN,IAqBvBO,KAAA,SAAAC,GAaON,EAAKD,OAAO,iBAAkBO,EAAOC,QAlCrB,MAqCX,SAAAC,GAhBZ,MAAA,IAAAC,MAAA,gBAiBOC,UA/BL,SAAAC,EA+BKb,GAAAa,EAAUF,OAAVE,EAAgBzB,MAAhB,IAPRc,EAAAC,KAUJC,KAAAA,QAAAC,IAAA,WAAAC,OAAAN,IAUSO,KAAK,SAAUC,GAEZ,IAAIlB,EAAQkB,EAAOC,KACbK,EAAOxB,EAAMyB,SAASD,KAjCnCE,EAAA1B,EAAAyB,SAyB4BC,SAClB,IAEX,IAAAC,KAAAH,EAUYxB,EAAM4B,UAAY5B,EAAM4B,UAAUC,QAAQL,EAAKG,GAAGG,IAAhC,8BAAAd,OAAmEQ,EAAKG,GAAGI,aAA3E,YALT/B,IAAMyB,IAAAA,KAASD,EACXxB,EAAMyB,UAASC,EAEhCE,UAAAC,QAAA,IAAAH,EAAAC,GAAAK,KAFgCN,mCAAAA,OAEhCA,EAAAC,GAAAK,KAFgCN,YAOhCd,EAAAD,OAAA,aAAAX,KArBZ,MAsB0B0B,SAAAA,GACJE,MAAN,IAAkB5B,MAAM4B,gBAWxCK,OApEO,SAAAC,EAoEYhC,GAAKgC,EAAfvB,OAPOE,KAACF,OAAO,WAAcX","file":"store.min.js","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        whois: [],\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n * Call API to load Tweet and highlight\n * @param {*} param0 \n * @param {*} id \n */\n        loadRawTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        loadTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/${id}`)\n                .then(function (result) {\n                    //Set variables\n                    var tweet = result.data;\n                    const urls = tweet.entities.urls;\n                    const hashtags = tweet.entities.hashtags;\n\n                    //For each URL, replace it with highlighted version\n                    for (let i in urls) {\n                        tweet.full_text = tweet.full_text.replace(urls[i].url, `<span class=\"highlightURL\">${urls[i].expanded_url}</span>`);\n                    }\n\n                    //For each hashtag, replace it with highlighted version\n                    for (let i in hashtags) {\n                        tweet.full_text = tweet.full_text.replace(\"#\" + hashtags[i].text, `<span class=\"highlightHashtag\">#${hashtags[i].text}</span>`)\n                    }\n\n                    //Assign modified tweet to state\n                    self.commit('SAVE_TWEET', tweet)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"]}