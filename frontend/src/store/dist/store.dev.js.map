{"version":3,"sources":["store.js"],"names":["Vue","use","Vuex","store","Store","state","rawTweet","tweet","twitterTrendsUS","twitterTrendsUK","whois","tab","Number","mutations","SAVE_RAW_TWEET","SAVE_TWEET","SAVE_TWITTER_TRENDS_US","twitterTrends","SAVE_TWITTER_TRENDS_UK","SAVE_WHOIS","SAVE_TAB","actions","loadRawTweet","id","commit","self","Api","get","then","result","data","error","Error","loadTweet","urls","entities","hashtags","i","full_text","replace","url","expanded_url","text","loadTwitterTrends","setTab"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        twitterTrendsUS: {},\n        twitterTrendsUK: {},\n        whois: [],\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_TWITTER_TRENDS_US(state, twitterTrends) {\n            state.twitterTrendsUS = twitterTrends;\n        },\n        SAVE_TWITTER_TRENDS_UK(state, twitterTrends) {\n            state.twitterTrendsUK = twitterTrends;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n        * Call API to load Tweet and highlight\n        * @param {*} param0 \n        * @param {*} id \n        */\n        loadRawTweet({commit}, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        loadTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n                    //Set variables\n                    var tweet = result.data;\n                    const urls = tweet.entities.urls;\n                    const hashtags = tweet.entities.hashtags;\n\n                    //For each URL, replace it with highlighted version\n                    for (let i in urls) {\n                        tweet.full_text = tweet.full_text.replace(urls[i].url, `<span class=\"highlightURL\">${urls[i].expanded_url}</span>`);\n                    }\n\n                    //For each hashtag, replace it with highlighted version\n                    for (let i in hashtags) {\n                        tweet.full_text = tweet.full_text.replace(\"#\" + hashtags[i].text, `<span class=\"highlightHashtag\">#${hashtags[i].text}</span>`)\n                    }\n\n                    //Assign modified tweet to state\n                    self.commit('SAVE_TWEET', tweet)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadTwitterTrends() {\n            var self = this;\n\n            Api.get(`twitter/trends/2459115`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_US')\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n            Api.get(`twitter/trends/44418`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TENDS_UK')\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"],"file":"store.dev.js"}