{"version":3,"sources":["store.js"],"names":["Vue","use","Vuex","store","Store","state","rawTweet","tweet","twitterTrendsUS","twitterTrendsUK","whois","tab","Number","mutations","SAVE_RAW_TWEET","SAVE_TWEET","SAVE_TWITTER_TRENDS_US","SAVE_TWITTER_TRENDS_UK","SAVE_WHOIS","SAVE_TAB","actions","loadRawTweet","id","commit","self","Api","get","then","result","data","error","Error","loadTweet","dispatch","loadWhois","urls","entities","i","length","url","expanded_url","indexOf","hostname","split","extractedUrl","psl","push","loadTwitterTrendsUK","loadTwitterTrendsUS","setTab"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\nimport psl from \"psl\";\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        twitterTrendsUS: [],\n        twitterTrendsUK: [],\n        whois: null,\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_TWITTER_TRENDS_US(state, twitterTrendsUS) {\n            state.twitterTrendsUS = twitterTrendsUS;\n        },\n        SAVE_TWITTER_TRENDS_UK(state, twitterTrendsUK) {\n            state.twitterTrendsUK = twitterTrendsUK;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n        * Call API to load Tweet and highlight\n        * @param {*} param0 \n        * @param {*} id \n        */\n        loadRawTweet({ commit }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        async loadTweet({ commit, dispatch }, id) {\n\n            //Assign modified tweet to state\n            await Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n                    commit('SAVE_TWEET', result.data);\n                    //Throw error if needed\n                }).then(function () {\n                    dispatch('loadWhois');\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n\n\n        },\n        async loadWhois({ commit, state }) {\n\n\n            var urls = state.tweet.entities.urls;\n            var whois = [];\n\n            //Performs whois on each hostname in Tweet\n            for (let i = 0; i < urls.length; i++) {\n\n                var url = urls[i].expanded_url;\n                var hostname;\n                //find & remove protocol (http, ftp, etc.) and get hostname\n\n                if (url.indexOf(\"//\") > -1) {\n                    hostname = url.split(\"/\")[2];\n                } else {\n                    hostname = url.split(\"/\")[0];\n                }\n\n                //find & remove port number\n                hostname = hostname.split(\":\")[0];\n                //find & remove \"?\"\n                hostname = hostname.split(\"?\")[0];\n\n                //Extract hostname\n                var extractedUrl = psl.get(hostname);\n\n                //Make API call\n                await Api.get(`whois/${extractedUrl}`)\n                    .then(function (result) {\n\n                        //Add result to array\n                        whois.push(result.data);\n                    })\n                    .catch(error => {\n                        throw new Error(\"API ERROR\");\n                    });\n            }\n\n            //Assign local variable\n            commit('SAVE_WHOIS', whois);\n        },\n        loadTwitterTrendsUK() {\n            var self = this;\n\n            Api.get(`twitter/trends/44418`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_UK', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadTwitterTrendsUS() {\n            var self = this;\n\n            Api.get(`twitter/trends/2459115`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_US', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"],"file":"store.dev.js"}