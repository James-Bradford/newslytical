{"version":3,"sources":["store.js"],"names":["Vue","use","Vuex","store","Store","state","tweet","whois","tab","Number","mutations","SAVE_TWEET","SAVE_WHOIS","SAVE_TAB","actions","loadTweet","id","commit","self","Api","get","then","result","data","urls","entities","hashtags","i","full_text","replace","url","expanded_url","text","error","Error","loadWhois","length","push","console","log","setTab"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        tweet: {},\n        whois: [],\n        tab: Number\n    },\n    mutations: {\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        loadTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/${id}`)\n                .then(function (result) {\n                    //Set variables\n                    var tweet = result.data;\n                    const urls = tweet.entities.urls;\n                    const hashtags = tweet.entities.hashtags;\n\n                    //For each URL, replace it with highlighted version\n                    for (let i in urls) {\n                        tweet.full_text = tweet.full_text.replace(urls[i].url, `<span class=\"highlightURL\">${urls[i].expanded_url}</span>`);\n                    }\n\n                    //For each hashtag, replace it with highlighted version\n                    for (let i in hashtags) {\n                        tweet.full_text = tweet.full_text.replace(\"#\" + hashtags[i].text, `<span class=\"highlightHashtag\">#${hashtags[i].text}</span>`)\n                    }\n\n                    //Assign modified tweet to state\n                    self.commit('SAVE_TWEET', tweet)\n\n                //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadWhois({state}) {\n            var urls = state.tweet.entities.urls;\n            var whois = [];\n            var self = this;\n\n            for (let i = 1; i < urls.length; i++ ) {\n                Api.get(`whois/${urls[i]}`)\n                .then(function (result) {\n                    whois.push(result.data);\n                    console.log(result.data);\n                    self.commit('SAVE_WHOIS', whois);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n            }\n         \n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"],"file":"store.dev.js"}