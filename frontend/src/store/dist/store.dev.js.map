{"version":3,"sources":["store.js"],"names":["Vue","use","Vuex","store","Store","state","rawTweet","tweet","whois","tab","Number","mutations","SAVE_RAW_TWEET","SAVE_TWEET","SAVE_WHOIS","SAVE_TAB","actions","loadRawTweet","id","commit","self","Api","get","then","result","data","error","Error","loadTweet","urls","entities","hashtags","i","full_text","replace","url","expanded_url","text","setTab"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        whois: [],\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n * Call API to load Tweet and highlight\n * @param {*} param0 \n * @param {*} id \n */\n        loadRawTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        loadTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/${id}`)\n                .then(function (result) {\n                    //Set variables\n                    var tweet = result.data;\n                    const urls = tweet.entities.urls;\n                    const hashtags = tweet.entities.hashtags;\n\n                    //For each URL, replace it with highlighted version\n                    for (let i in urls) {\n                        tweet.full_text = tweet.full_text.replace(urls[i].url, `<span class=\"highlightURL\">${urls[i].expanded_url}</span>`);\n                    }\n\n                    //For each hashtag, replace it with highlighted version\n                    for (let i in hashtags) {\n                        tweet.full_text = tweet.full_text.replace(\"#\" + hashtags[i].text, `<span class=\"highlightHashtag\">#${hashtags[i].text}</span>`)\n                    }\n\n                    //Assign modified tweet to state\n                    self.commit('SAVE_TWEET', tweet)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"],"file":"store.dev.js"}