{"remainingRequest":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/pug-plain-loader/index.js!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/components/WordsLayout.vue?vue&type=template&id=4c110bb3&lang=pug&","dependencies":[{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/components/WordsLayout.vue","mtime":1595501524655},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/pug-plain-loader/index.js","mtime":1521946589000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}