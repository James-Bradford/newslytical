{"remainingRequest":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/components/LinkCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/components/LinkCard.vue","mtime":1594375874377},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBBcGkgZnJvbSAiLi4vc2VydmljZXMvQXBpIjsKdmFyIHBzbCA9IHJlcXVpcmUoInBzbCIpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJMaW5rQ2FyZCIsCiAgcHJvcHM6IHsKICAgIHVybHM6IFtdLAogICAgd2hvaXM6IFtdCiAgfSwKICBjb21wdXRlZDogewogICAgdHdlZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS50d2VldDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGV4dHJhY3RIb3N0bmFtZSh1cmwpIHsKICAgICAgdmFyIGhvc3RuYW1lOwogICAgICAvL2ZpbmQgJiByZW1vdmUgcHJvdG9jb2wgKGh0dHAsIGZ0cCwgZXRjLikgYW5kIGdldCBob3N0bmFtZQoKICAgICAgaWYgKHVybC5pbmRleE9mKCIvLyIpID4gLTEpIHsKICAgICAgICBob3N0bmFtZSA9IHVybC5zcGxpdCgiLyIpWzJdOwogICAgICB9IGVsc2UgewogICAgICAgIGhvc3RuYW1lID0gdXJsLnNwbGl0KCIvIilbMF07CiAgICAgIH0KCiAgICAgIC8vZmluZCAmIHJlbW92ZSBwb3J0IG51bWJlcgogICAgICBob3N0bmFtZSA9IGhvc3RuYW1lLnNwbGl0KCI6IilbMF07CiAgICAgIC8vZmluZCAmIHJlbW92ZSAiPyIKICAgICAgaG9zdG5hbWUgPSBob3N0bmFtZS5zcGxpdCgiPyIpWzBdOwoKICAgICAgcmV0dXJuIGhvc3RuYW1lOwogICAgfQogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICB2YXIgdXJscyA9IHRoaXMudHdlZXQuZW50aXRpZXMudXJsczsKICAgIHZhciB3aG9pcyA9IFtdOwogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgdmFyIHVybDsKCiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHVybHMubGVuZ3RoOyBpKyspIHsKICAgICAgdXJsID0gcHNsLmdldCh0aGlzLmV4dHJhY3RIb3N0bmFtZSh1cmxzW2ldLmV4cGFuZGVkX3VybCkpOwogICAgICBjb25zb2xlLmxvZyh1cmwpOwogICAgICBBcGkuZ2V0KGB3aG9pcy8ke3VybH1gKQogICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3VsdCkgewogICAgICAgICAgd2hvaXMucHVzaChyZXN1bHQuZGF0YSk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJBUEkgRVJST1IiKTsKICAgICAgICB9KTsKICAgICAgdGhpcy53aG9pcyA9IHdob2lzOwogICAgICBjb25zb2xlLmxvZyh3aG9pcyk7CiAgICB9CiAgICBjb25zb2xlLmxvZyh1cmwpOwogIH0KfTsK"},{"version":3,"sources":["LinkCard.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LinkCard.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n      v-expansion-panels(popout)\n        v-expansion-panel(v-for='(url, u) in this.whois' :key='u')\n          v-expansion-panel-header {{url.WhoisRecord.domainName}}\n            v-expansion-panel-content\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Api from \"../services/Api\";\nvar psl = require(\"psl\");\n\nexport default {\n  name: \"LinkCard\",\n  props: {\n    urls: [],\n    whois: []\n  },\n  computed: {\n    tweet() {\n      return this.$store.state.tweet;\n    }\n  },\n  methods: {\n    extractHostname(url) {\n      var hostname;\n      //find & remove protocol (http, ftp, etc.) and get hostname\n\n      if (url.indexOf(\"//\") > -1) {\n        hostname = url.split(\"/\")[2];\n      } else {\n        hostname = url.split(\"/\")[0];\n      }\n\n      //find & remove port number\n      hostname = hostname.split(\":\")[0];\n      //find & remove \"?\"\n      hostname = hostname.split(\"?\")[0];\n\n      return hostname;\n    }\n  },\n\n  created() {\n    var urls = this.tweet.entities.urls;\n    var whois = [];\n    var self = this;\n    var url;\n\n    for (let i = 0; i < urls.length; i++) {\n      url = psl.get(this.extractHostname(urls[i].expanded_url));\n      console.log(url);\n      Api.get(`whois/${url}`)\n        .then(function(result) {\n          whois.push(result.data);\n        })\n        .catch(error => {\n          throw new Error(\"API ERROR\");\n        });\n      this.whois = whois;\n      console.log(whois);\n    }\n    console.log(url);\n  }\n};\n</script>\n\n<style>\n</style>"]}]}