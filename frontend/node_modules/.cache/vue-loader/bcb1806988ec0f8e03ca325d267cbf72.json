{"remainingRequest":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/pug-plain-loader/index.js!/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/src/components/TweetCard.vue?vue&type=template&id=667dd6be&scoped=true&lang=pug&","dependencies":[{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/src/components/TweetCard.vue","mtime":1594209552781},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/pug-plain-loader/index.js","mtime":1521946589000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgInYtY2FyZCIsCiAgICB7CiAgICAgIHN0YXRpY0NsYXNzOiAibXgtYXV0byBwYS02IHJvdW5kZWQtbGcgZWxldmF0ZWQtNCIsCiAgICAgIGF0dHJzOiB7IGlkOiAidHdlZXQtY2FyZCIgfQogICAgfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgInYtY2FyZC10aXRsZSIsCiAgICAgICAgWwogICAgICAgICAgX2MoInYtaWNvbiIsIHsgYXR0cnM6IHsgbGFyZ2U6ICIiLCBsZWZ0OiAiIiwgY29sb3I6ICJ3aGl0ZSIgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdigibWRpLXR3aXR0ZXIiKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSBmb250LXdlaWdodC1saWdodCB3aGl0ZS0tdGV4dCIgfSwgWwogICAgICAgICAgICBfdm0uX3YoIk9yaWdpbmFsIFR3ZWV0IikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgcmVmOiAiaGlnaGxpZ2h0IiwKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWg2IHRleHQtbWQtaDQgd2hpdGUtLXRleHQiLAogICAgICAgICAgICBhdHRyczogeyBpZDogInR3ZWV0LXRleHQiIH0sCiAgICAgICAgICAgIGRvbVByb3BzOiB7IGlubmVySFRNTDogX3ZtLl9zKHRoaXMudHdlZXQuZnVsbF90ZXh0KSB9CiAgICAgICAgICB9KQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygKICAgICAgICAidi1jYXJkLWFjdGlvbnMiLAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1saXN0LWl0ZW0iLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZ3JvdyIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtLWF2YXRhciIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGNvbG9yOiAiZ3JleSBkYXJrZW4tMyIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygidi1pbWciLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJlbGV2YXRpb24tNiIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiB0aGlzLnR3ZWV0LnVzZXIucHJvZmlsZV9pbWFnZV91cmwgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtbGlzdC1pdGVtLWNvbnRlbnQiLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygidi1saXN0LWl0ZW0tdGl0bGUiLCB7IHN0YXRpY0NsYXNzOiAid2hpdGUtLXRleHQiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKHRoaXMudHdlZXQudXNlci5uYW1lKSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGFsaWduOiAiY2VudGVyIiwganVzdGlmeTogImVuZCIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1pY29uIiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibXItMSIsIGF0dHJzOiB7IGNvbG9yOiAid2hpdGUiIH0gfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJtZGktaGVhcnQiKV0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic3ViaGVhZGluZyBtci0yIHdoaXRlLS10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKHRoaXMudHdlZXQuZmF2b3JpdGVfY291bnQpKSkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm1yLTEgd2hpdGUtLXRleHQiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIsK3IikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWljb24iLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJtci0xIiwgYXR0cnM6IHsgY29sb3I6ICJ3aGl0ZSIgfSB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIm1kaS10d2l0dGVyLXJldHdlZXQiKV0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic3ViaGVhZGluZyB3aGl0ZS0tdGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcih0aGlzLnR3ZWV0LnJldHdlZXRfY291bnQpKSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICkKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}