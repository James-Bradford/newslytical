{"remainingRequest":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/components/LinkWhois.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/components/LinkWhois.vue","mtime":1594383847600},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IEFwaSBmcm9tICIuLi9zZXJ2aWNlcy9BcGkiOwoKdmFyIHBzbCA9IHJlcXVpcmUoInBzbCIpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJMaW5rV2hvaXMiLAogIHByb3BzOiB7CiAgICB1cmxzOiBbXSwKICAgIHdob2lzOiBbXQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHR3ZWV0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudHdlZXQ7CiAgICB9CgogIH0sCiAgbWV0aG9kczogewogICAgZXh0cmFjdEhvc3RuYW1lKHVybCkgewogICAgICB2YXIgaG9zdG5hbWU7IC8vZmluZCAmIHJlbW92ZSBwcm90b2NvbCAoaHR0cCwgZnRwLCBldGMuKSBhbmQgZ2V0IGhvc3RuYW1lCgogICAgICBpZiAodXJsLmluZGV4T2YoIi8vIikgPiAtMSkgewogICAgICAgIGhvc3RuYW1lID0gdXJsLnNwbGl0KCIvIilbMl07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaG9zdG5hbWUgPSB1cmwuc3BsaXQoIi8iKVswXTsKICAgICAgfSAvL2ZpbmQgJiByZW1vdmUgcG9ydCBudW1iZXIKCgogICAgICBob3N0bmFtZSA9IGhvc3RuYW1lLnNwbGl0KCI6IilbMF07IC8vZmluZCAmIHJlbW92ZSAiPyIKCiAgICAgIGhvc3RuYW1lID0gaG9zdG5hbWUuc3BsaXQoIj8iKVswXTsKICAgICAgcmV0dXJuIGhvc3RuYW1lOwogICAgfSwKCiAgICBpc0hUVFBTKHVybCkgewogICAgICBpZiAodXJsLm1hdGNoKC9eW146XSsvKSA9PSAiaHR0cHMiKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9CgogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICB2YXIgdXJscyA9IHRoaXMudHdlZXQuZW50aXRpZXMudXJsczsKICAgIHZhciB3aG9pcyA9IFtdOwogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgdmFyIHVybDsgLy9QZXJmb3JtcyB3aG9pcyBvbiBlYWNoIGhvc3RuYW1lIGluIFR3ZWV0CgogICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1cmxzLmxlbmd0aDsgaSsrKSB7CiAgICAgIC8vRXh0cmFjdCBob3N0bmFtZQogICAgICB1cmwgPSBwc2wuZ2V0KHRoaXMuZXh0cmFjdEhvc3RuYW1lKHVybHNbaV0uZXhwYW5kZWRfdXJsKSk7IC8vTWFrZSBBUEkgY2FsbAoKICAgICAgQXBpLmdldChgd2hvaXMvJHt1cmx9YCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgLy9BZGQgcmVzdWx0IHRvIGFycmF5CiAgICAgICAgd2hvaXMucHVzaChyZXN1bHQuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkFQSSBFUlJPUiIpOwogICAgICB9KTsgLy9Bc3NpZ24gbG9jYWwgdmFyaWFibGUKCiAgICAgIHRoaXMud2hvaXMgPSB3aG9pczsKICAgIH0KCiAgICBjb25zb2xlLmxvZyh0aGlzLndob2lzKTsKICB9Cgp9Ow=="},{"version":3,"sources":["LinkWhois.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA,MAAA,iBAAA;;AACA,IAAA,GAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,EADA;AAEA,IAAA,KAAA,EAAA;AAFA,GAFA;AAMA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,GAAA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA;;AAHA,GANA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,eAAA,CAAA,GAAA,EAAA;AACA,UAAA,QAAA,CADA,CAEA;;AAEA,UAAA,GAAA,CAAA,OAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,QAAA,QAAA,GAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA,GAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,OARA,CAUA;;;AACA,MAAA,QAAA,GAAA,QAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAXA,CAYA;;AACA,MAAA,QAAA,GAAA,QAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AAEA,aAAA,QAAA;AACA,KAjBA;;AAkBA,IAAA,OAAA,CAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,KAAA,CAAA,QAAA,KAAA,OAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,MAEA;AAAA,eAAA,KAAA;AAAA;AACA;;AAtBA,GAXA;;AAoCA,EAAA,OAAA,GAAA;AACA,QAAA,IAAA,GAAA,KAAA,KAAA,CAAA,QAAA,CAAA,IAAA;AACA,QAAA,KAAA,GAAA,EAAA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,QAAA,GAAA,CAJA,CAMA;;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AAEA;AACA,MAAA,GAAA,GAAA,GAAA,CAAA,GAAA,CAAA,KAAA,eAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,CAAA,CAHA,CAKA;;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,SAAA,GAAA,EAAA,EACA,IADA,CACA,UAAA,MAAA,EAAA;AAEA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA;AACA,OALA,EAMA,KANA,CAMA,KAAA,IAAA;AACA,cAAA,IAAA,KAAA,CAAA,WAAA,CAAA;AACA,OARA,EANA,CAgBA;;AACA,WAAA,KAAA,GAAA,KAAA;AACA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA;;AA/DA,CAAA","sourcesContent":["<template lang=\"pug\">\n    v-card.py-2(color=\"warning\")\n      v-card-title.white--text\n        v-icon.mdi.mdi-link(color=\"white\")\n        | Whois Data\n      v-expansion-panels(popout)\n        v-expansion-panel(v-for='(url, u) in this.tweet.entities.urls' :key='u')\n          v-expansion-panel-header {{ url.expanded_url }}\n          v-expansion-panel-content \n              div(v-if='isHTTPS(url.expanded_url)') \n                v-icon.mdi.mdi-lock-check(color=\"success\")\n                | This website uses HTTPS encryption\n              div(v-else) \n                v-icon.mdi.mdi-lock-open-alert(color=\"warning\")\n                | This website does not use HTTPS encryption\n              div(v-if='whois[u].WhoisRecord.registrant !== undefined') \n                v-icon.mdi.mdi-earth\n                | Registered in: {{ whois[u].WhoisRecord.registrant.country }}\n                br\n                v-icon.mdi.mdi-account\n                | Registrant: {{ whois[u].WhoisRecord.registrant.organization }}\n              div(v-else)\n                v-icon.mdi.mdi-earth-off\n                | No location found for this domain\n                br\n                v-icon.mdi.mdi-account-off\n                | No registrant information for this domain\n              div(v-if='whois[u].WhoisRecord.registryData.createdDate !== undefined')\n                v-icon.mdi.mdi-clock\n                | Created: {{ whois[u].WhoisRecord.registryData.createdDate }}\n              \n             \n</template>\n\n<script>\nimport axios from \"axios\";\nimport Api from \"../services/Api\";\nvar psl = require(\"psl\");\n\nexport default {\n  name: \"LinkWhois\",\n  props: {\n    urls: [],\n    whois: []\n  },\n  computed: {\n    tweet() {\n      return this.$store.state.tweet;\n    }\n  },\n  methods: {\n    extractHostname(url) {\n      var hostname;\n      //find & remove protocol (http, ftp, etc.) and get hostname\n\n      if (url.indexOf(\"//\") > -1) {\n        hostname = url.split(\"/\")[2];\n      } else {\n        hostname = url.split(\"/\")[0];\n      }\n\n      //find & remove port number\n      hostname = hostname.split(\":\")[0];\n      //find & remove \"?\"\n      hostname = hostname.split(\"?\")[0];\n\n      return hostname;\n    },\n    isHTTPS(url) {\n      if (url.match(/^[^:]+/) == \"https\") {\n        return true\n      } else { return false }\n    }\n  },\n\n  created() {\n    var urls = this.tweet.entities.urls;\n    var whois = [];\n    var self = this;\n    var url;\n\n    //Performs whois on each hostname in Tweet\n    for (let i = 0; i < urls.length; i++) {\n\n      //Extract hostname\n      url = psl.get(this.extractHostname(urls[i].expanded_url));\n\n      //Make API call\n      Api.get(`whois/${url}`)\n        .then(function(result) {\n\n          //Add result to array\n          whois.push(result.data);\n        })\n        .catch(error => {\n          throw new Error(\"API ERROR\");\n        });\n\n      //Assign local variable\n      this.whois = whois;\n    }\n    console.log(this.whois);\n  }\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":"src/components"}]}