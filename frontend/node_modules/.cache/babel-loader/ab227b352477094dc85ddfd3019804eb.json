{"remainingRequest":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vuetify/lib/mixins/routable/index.js","dependencies":[{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/vuetify/lib/mixins/routable/index.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOyAvLyBEaXJlY3RpdmVzCgppbXBvcnQgUmlwcGxlIGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvcmlwcGxlJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgeyBnZXRPYmplY3RWYWx1ZUJ5UGF0aCB9IGZyb20gJy4uLy4uL3V0aWwvaGVscGVycyc7CmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoewogIG5hbWU6ICdyb3V0YWJsZScsCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlCiAgfSwKICBwcm9wczogewogICAgYWN0aXZlQ2xhc3M6IFN0cmluZywKICAgIGFwcGVuZDogQm9vbGVhbiwKICAgIGRpc2FibGVkOiBCb29sZWFuLAogICAgZXhhY3Q6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9LAogICAgZXhhY3RBY3RpdmVDbGFzczogU3RyaW5nLAogICAgbGluazogQm9vbGVhbiwKICAgIGhyZWY6IFtTdHJpbmcsIE9iamVjdF0sCiAgICB0bzogW1N0cmluZywgT2JqZWN0XSwKICAgIG51eHQ6IEJvb2xlYW4sCiAgICByZXBsYWNlOiBCb29sZWFuLAogICAgcmlwcGxlOiB7CiAgICAgIHR5cGU6IFtCb29sZWFuLCBPYmplY3RdLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgdGFnOiBTdHJpbmcsCiAgICB0YXJnZXQ6IFN0cmluZwogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGlzQWN0aXZlOiBmYWxzZSwKICAgIHByb3h5Q2xhc3M6ICcnCiAgfSksCiAgY29tcHV0ZWQ6IHsKICAgIGNsYXNzZXMoKSB7CiAgICAgIGNvbnN0IGNsYXNzZXMgPSB7fTsKICAgICAgaWYgKHRoaXMudG8pIHJldHVybiBjbGFzc2VzOwogICAgICBpZiAodGhpcy5hY3RpdmVDbGFzcykgY2xhc3Nlc1t0aGlzLmFjdGl2ZUNsYXNzXSA9IHRoaXMuaXNBY3RpdmU7CiAgICAgIGlmICh0aGlzLnByb3h5Q2xhc3MpIGNsYXNzZXNbdGhpcy5wcm94eUNsYXNzXSA9IHRoaXMuaXNBY3RpdmU7CiAgICAgIHJldHVybiBjbGFzc2VzOwogICAgfSwKCiAgICBjb21wdXRlZFJpcHBsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMucmlwcGxlICE9IG51bGwgPyB0aGlzLnJpcHBsZSA6ICF0aGlzLmRpc2FibGVkICYmIHRoaXMuaXNDbGlja2FibGU7CiAgICB9LAoKICAgIGlzQ2xpY2thYmxlKCkgewogICAgICBpZiAodGhpcy5kaXNhYmxlZCkgcmV0dXJuIGZhbHNlOwogICAgICByZXR1cm4gQm9vbGVhbih0aGlzLmlzTGluayB8fCB0aGlzLiRsaXN0ZW5lcnMuY2xpY2sgfHwgdGhpcy4kbGlzdGVuZXJzWychY2xpY2snXSB8fCB0aGlzLiRhdHRycy50YWJpbmRleCk7CiAgICB9LAoKICAgIGlzTGluaygpIHsKICAgICAgcmV0dXJuIHRoaXMudG8gfHwgdGhpcy5ocmVmIHx8IHRoaXMubGluazsKICAgIH0sCgogICAgc3R5bGVzOiAoKSA9PiAoe30pCiAgfSwKICB3YXRjaDogewogICAgJHJvdXRlOiAnb25Sb3V0ZUNoYW5nZScKICB9LAogIG1ldGhvZHM6IHsKICAgIGNsaWNrKGUpIHsKICAgICAgdGhpcy4kZW1pdCgnY2xpY2snLCBlKTsKICAgIH0sCgogICAgZ2VuZXJhdGVSb3V0ZUxpbmsoKSB7CiAgICAgIGxldCBleGFjdCA9IHRoaXMuZXhhY3Q7CiAgICAgIGxldCB0YWc7CiAgICAgIGNvbnN0IGRhdGEgPSB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHRhYmluZGV4OiAndGFiaW5kZXgnIGluIHRoaXMuJGF0dHJzID8gdGhpcy4kYXR0cnMudGFiaW5kZXggOiB1bmRlZmluZWQKICAgICAgICB9LAogICAgICAgIGNsYXNzOiB0aGlzLmNsYXNzZXMsCiAgICAgICAgc3R5bGU6IHRoaXMuc3R5bGVzLAogICAgICAgIHByb3BzOiB7fSwKICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgbmFtZTogJ3JpcHBsZScsCiAgICAgICAgICB2YWx1ZTogdGhpcy5jb21wdXRlZFJpcHBsZQogICAgICAgIH1dLAogICAgICAgIFt0aGlzLnRvID8gJ25hdGl2ZU9uJyA6ICdvbiddOiB7IC4uLnRoaXMuJGxpc3RlbmVycywKICAgICAgICAgIGNsaWNrOiB0aGlzLmNsaWNrCiAgICAgICAgfSwKICAgICAgICByZWY6ICdsaW5rJwogICAgICB9OwoKICAgICAgaWYgKHR5cGVvZiB0aGlzLmV4YWN0ID09PSAndW5kZWZpbmVkJykgewogICAgICAgIGV4YWN0ID0gdGhpcy50byA9PT0gJy8nIHx8IHRoaXMudG8gPT09IE9iamVjdCh0aGlzLnRvKSAmJiB0aGlzLnRvLnBhdGggPT09ICcvJzsKICAgICAgfQoKICAgICAgaWYgKHRoaXMudG8pIHsKICAgICAgICAvLyBBZGQgYSBzcGVjaWFsIGFjdGl2ZUNsYXNzIGhvb2sKICAgICAgICAvLyBmb3IgY29tcG9uZW50IGxldmVsIHN0eWxlcwogICAgICAgIGxldCBhY3RpdmVDbGFzcyA9IHRoaXMuYWN0aXZlQ2xhc3M7CiAgICAgICAgbGV0IGV4YWN0QWN0aXZlQ2xhc3MgPSB0aGlzLmV4YWN0QWN0aXZlQ2xhc3MgfHwgYWN0aXZlQ2xhc3M7CgogICAgICAgIGlmICh0aGlzLnByb3h5Q2xhc3MpIHsKICAgICAgICAgIGFjdGl2ZUNsYXNzID0gYCR7YWN0aXZlQ2xhc3N9ICR7dGhpcy5wcm94eUNsYXNzfWAudHJpbSgpOwogICAgICAgICAgZXhhY3RBY3RpdmVDbGFzcyA9IGAke2V4YWN0QWN0aXZlQ2xhc3N9ICR7dGhpcy5wcm94eUNsYXNzfWAudHJpbSgpOwogICAgICAgIH0KCiAgICAgICAgdGFnID0gdGhpcy5udXh0ID8gJ251eHQtbGluaycgOiAncm91dGVyLWxpbmsnOwogICAgICAgIE9iamVjdC5hc3NpZ24oZGF0YS5wcm9wcywgewogICAgICAgICAgdG86IHRoaXMudG8sCiAgICAgICAgICBleGFjdCwKICAgICAgICAgIGFjdGl2ZUNsYXNzLAogICAgICAgICAgZXhhY3RBY3RpdmVDbGFzcywKICAgICAgICAgIGFwcGVuZDogdGhpcy5hcHBlbmQsCiAgICAgICAgICByZXBsYWNlOiB0aGlzLnJlcGxhY2UKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0YWcgPSB0aGlzLmhyZWYgJiYgJ2EnIHx8IHRoaXMudGFnIHx8ICdkaXYnOwogICAgICAgIGlmICh0YWcgPT09ICdhJyAmJiB0aGlzLmhyZWYpIGRhdGEuYXR0cnMuaHJlZiA9IHRoaXMuaHJlZjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMudGFyZ2V0KSBkYXRhLmF0dHJzLnRhcmdldCA9IHRoaXMudGFyZ2V0OwogICAgICByZXR1cm4gewogICAgICAgIHRhZywKICAgICAgICBkYXRhCiAgICAgIH07CiAgICB9LAoKICAgIG9uUm91dGVDaGFuZ2UoKSB7CiAgICAgIGlmICghdGhpcy50byB8fCAhdGhpcy4kcmVmcy5saW5rIHx8ICF0aGlzLiRyb3V0ZSkgcmV0dXJuOwogICAgICBjb25zdCBhY3RpdmVDbGFzcyA9IGAke3RoaXMuYWN0aXZlQ2xhc3N9ICR7dGhpcy5wcm94eUNsYXNzIHx8ICcnfWAudHJpbSgpOwogICAgICBjb25zdCBwYXRoID0gYF92bm9kZS5kYXRhLmNsYXNzLiR7YWN0aXZlQ2xhc3N9YDsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovCiAgICAgICAgaWYgKGdldE9iamVjdFZhbHVlQnlQYXRoKHRoaXMuJHJlZnMubGluaywgcGF0aCkpIHsKICAgICAgICAgIHRoaXMudG9nZ2xlKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgdG9nZ2xlOiAoKSA9PiB7fQogIH0KfSk7"},null]}