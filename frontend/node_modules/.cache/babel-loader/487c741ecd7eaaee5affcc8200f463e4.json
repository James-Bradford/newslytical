{"remainingRequest":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/babel-loader/lib/index.js!/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/src/services/Twitter.js","dependencies":[{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/src/services/Twitter.js","mtime":1594111736581},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEFwaSBmcm9tICIuL0FwaSI7Ci8qKgogKiBDb250YWlucyB0aGUgcmVxdWlyZWQgbWV0aG9kcyB0byBhY2Nlc3MgaW5mb3JtYXRpb24gYWJvdXQgYSBUd2VldAogKi8KCmV4cG9ydCBjbGFzcyBUd2l0dGVyIHsKICBjb25zdHJ1Y3Rvcih0d2VldElEKSB7CiAgICB0aGlzLnR3ZWV0SUQgPSB0d2VldElEOwogIH0KICAvKioKICAgKiBHZXQgYSBUd2VldCBvYmplY3Qgb2YgYSBzcGVjaWZpYyBJRAogICAqIEByZXR1cm5zIE9iamVjdCBUd2VldCBvYmplY3QKICAgKi8KCgogIGdldFR3ZWV0KCkgewogICAgcmV0dXJuIEFwaS5nZXQoYC90d2l0dGVyLyR7dGhpcy50d2VldElEfWApOwogIH0KICAvKioKICAgKiBBZGRzIGEgPHNwYW4+IHRhZyBhcm91bmQgc2VjdGlvbnMgaW4gYSB0d2VldAogICAqIEBwYXJhbSB7Kn0gdHdlZXQgVHdlZXQgb2JqZWN0CiAgICovCgoKICBoaWdobGlnaHQodHdlZXQsIGZpbHRlcnMpIHsKICAgIHZhciB0d2VldFRleHQgPSB0d2VldC5mdWxsX3RleHQ7IC8vQ2hlY2sgb3B0aW9ucyB0byBzZWUgd2hpY2ggaGlnaGxpZ2h0IG9wdGlvbnMgYXJlIGVuYWJsZWQKCiAgICBpZiAoZmlsdGVycy51cmwgPT0gdHJ1ZSkgewogICAgICBjb25zdCB1cmxzID0gdHdlZXQuZW50aXRpZXMudXJsczsgLy9Td2FwIHRoZSB1cmxzIHdpdGggaGlnaGxpZ2h0ZWQgdmVyc2lvbnMKCiAgICAgIGZvciAobGV0IGkgaW4gdXJscykgewogICAgICAgIHR3ZWV0VGV4dCA9IHR3ZWV0VGV4dC5yZXBsYWNlKHVybHNbaV0udXJsLCAiPHYtYnRuIGNsYXNzPSdoaWdobGlnaHRVUkwnIHYtb246Y2xpY2submF0aXZlPSckZW1pdCgndGFiQ2hhbmdlJywgMSknPiIgKyB1cmxzW2ldLmV4cGFuZGVkX3VybCArICI8L3YtYnRuPiIpOwogICAgICB9CiAgICB9CgogICAgaWYgKGZpbHRlcnMuaGFzaHRhZyA9PSB0cnVlKSB7CiAgICAgIGNvbnN0IGhhc2h0YWdzID0gdHdlZXQuZW50aXRpZXMuaGFzaHRhZ3M7CgogICAgICBmb3IgKGxldCBpIGluIGhhc2h0YWdzKSB7CiAgICAgICAgdHdlZXRUZXh0ID0gdHdlZXRUZXh0LnJlcGxhY2UoIiMiICsgaGFzaHRhZ3NbaV0udGV4dCwgYDxidXR0b24gY2xhc3M9J2hpZ2hsaWdodEhhc2h0YWcnIHYtb246Y2xpY2submF0aXZlPSIkZW1pdCgndGFiQ2hhbmdlJywgMikiPiMke2hhc2h0YWdzW2ldLnRleHR9PC9idXR0b24+YCk7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdHdlZXRUZXh0OwogIH0KCn0="},{"version":3,"sources":["/Users/jamesbradford/Documents/Dissertation Repository/Repos/newslytical-frontend/src/services/Twitter.js"],"names":["Api","Twitter","constructor","tweetID","getTweet","get","highlight","tweet","filters","tweetText","full_text","url","urls","entities","i","replace","expanded_url","hashtag","hashtags","text"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA;;;;AAGA,OAAO,MAAMC,OAAN,CAAc;AAGjBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACH;AAED;;;;;;AAIAC,EAAAA,QAAQ,GAAG;AACP,WAAOJ,GAAG,CAACK,GAAJ,CAAS,YAAW,KAAKF,OAAQ,EAAjC,CAAP;AACH;AAED;;;;;;AAIAG,EAAAA,SAAS,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACtB,QAAIC,SAAS,GAAGF,KAAK,CAACG,SAAtB,CADsB,CAGtB;;AACY,QAAIF,OAAO,CAACG,GAAR,IAAe,IAAnB,EAAyB;AACrB,YAAMC,IAAI,GAAGL,KAAK,CAACM,QAAN,CAAeD,IAA5B,CADqB,CAGrB;;AACA,WAAK,IAAIE,CAAT,IAAcF,IAAd,EAAoB;AAChBH,QAAAA,SAAS,GAAGA,SAAS,CAACM,OAAV,CAAkBH,IAAI,CAACE,CAAD,CAAJ,CAAQH,GAA1B,EAA+B,2EAA2EC,IAAI,CAACE,CAAD,CAAJ,CAAQE,YAAnF,GAAkG,UAAjI,CAAZ;AACH;AACJ;;AAED,QAAIR,OAAO,CAACS,OAAR,IAAmB,IAAvB,EAA6B;AACzB,YAAMC,QAAQ,GAAGX,KAAK,CAACM,QAAN,CAAeK,QAAhC;;AAEA,WAAK,IAAIJ,CAAT,IAAcI,QAAd,EAAwB;AACpBT,QAAAA,SAAS,GAAGA,SAAS,CAACM,OAAV,CAAkB,MAAMG,QAAQ,CAACJ,CAAD,CAAR,CAAYK,IAApC,EAA2C,+EAA8ED,QAAQ,CAACJ,CAAD,CAAR,CAAYK,IAAK,WAA1I,CAAZ;AACH;AACJ;;AACD,WAAOV,SAAP;AAGX;;AA1CY","sourcesContent":["import Api from \"./Api\";\n\n/**\n * Contains the required methods to access information about a Tweet\n */\nexport class Twitter {\n    \n\n    constructor(tweetID) {\n        this.tweetID = tweetID;\n    }\n\n    /**\n     * Get a Tweet object of a specific ID\n     * @returns Object Tweet object\n     */\n    getTweet() {\n        return Api.get(`/twitter/${this.tweetID}`);\n    }\n\n    /**\n     * Adds a <span> tag around sections in a tweet\n     * @param {*} tweet Tweet object\n     */\n    highlight(tweet, filters) {\n        var tweetText = tweet.full_text;\n\n        //Check options to see which highlight options are enabled\n                    if (filters.url == true) {\n                        const urls = tweet.entities.urls;\n\n                        //Swap the urls with highlighted versions\n                        for (let i in urls) {\n                            tweetText = tweetText.replace(urls[i].url, \"<v-btn class='highlightURL' v-on:click.native='$emit('tabChange', 1)'>\" + urls[i].expanded_url + \"</v-btn>\");\n                        }\n                    }\n\n                    if (filters.hashtag == true) {\n                        const hashtags = tweet.entities.hashtags;\n\n                        for (let i in hashtags) {\n                            tweetText = tweetText.replace(\"#\" + hashtags[i].text, `<button class='highlightHashtag' v-on:click.native=\"$emit('tabChange', 2)\">#${hashtags[i].text}</button>`)\n                        }\n                    }\n                    return tweetText;\n\n            \n        }\n        \n        \n\n}\n"]}]}