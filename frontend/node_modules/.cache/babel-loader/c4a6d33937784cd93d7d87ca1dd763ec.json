{"remainingRequest":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/store/store.js","dependencies":[{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/store/store.js","mtime":1595066138731},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IEFwaSBmcm9tICcuLi9zZXJ2aWNlcy9BcGknOwppbXBvcnQgcHNsIGZyb20gInBzbCI7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBjb25zdCBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgcmF3VHdlZXQ6IHt9LAogICAgdHdlZXQ6IHt9LAogICAgdHdpdHRlclRyZW5kc1VTOiBbXSwKICAgIHR3aXR0ZXJUcmVuZHNVSzogW10sCiAgICB3aG9pczogbnVsbCwKICAgIHRhYjogTnVtYmVyCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNBVkVfUkFXX1RXRUVUKHN0YXRlLCByYXdUd2VldCkgewogICAgICBzdGF0ZS5yYXdUd2VldCA9IHJhd1R3ZWV0OwogICAgfSwKCiAgICBTQVZFX1RXRUVUKHN0YXRlLCB0d2VldCkgewogICAgICBzdGF0ZS50d2VldCA9IHR3ZWV0OwogICAgfSwKCiAgICBTQVZFX1RXSVRURVJfVFJFTkRTX1VTKHN0YXRlLCB0d2l0dGVyVHJlbmRzVVMpIHsKICAgICAgc3RhdGUudHdpdHRlclRyZW5kc1VTID0gdHdpdHRlclRyZW5kc1VTOwogICAgfSwKCiAgICBTQVZFX1RXSVRURVJfVFJFTkRTX1VLKHN0YXRlLCB0d2l0dGVyVHJlbmRzVUspIHsKICAgICAgc3RhdGUudHdpdHRlclRyZW5kc1VLID0gdHdpdHRlclRyZW5kc1VLOwogICAgfSwKCiAgICBTQVZFX1dIT0lTKHN0YXRlLCB3aG9pcykgewogICAgICBzdGF0ZS53aG9pcyA9IHdob2lzOwogICAgfSwKCiAgICBTQVZFX1RBQihzdGF0ZSwgdGFiKSB7CiAgICAgIHN0YXRlLnRhYiA9IHRhYjsKICAgIH0KCiAgfSwKICBhY3Rpb25zOiB7CiAgICAvKioKICAgICogQ2FsbCBBUEkgdG8gbG9hZCBUd2VldCBhbmQgaGlnaGxpZ2h0CiAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIAogICAgKiBAcGFyYW0geyp9IGlkIAogICAgKi8KICAgIGxvYWRSYXdUd2VldCh7CiAgICAgIGNvbW1pdAogICAgfSwgaWQpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOyAvL01ha2UgQVBJIGNhbGwKCiAgICAgIEFwaS5nZXQoYHR3aXR0ZXIvdHdlZXQvJHtpZH1gKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICBzZWxmLmNvbW1pdCgnU0FWRV9SQVdfVFdFRVQnLCByZXN1bHQuZGF0YSk7IC8vVGhyb3cgZXJyb3IgaWYgbmVlZGVkCiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkFQSSBFUlJPUiIpOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBDYWxsIEFQSSB0byBsb2FkIFR3ZWV0IGFuZCBoaWdobGlnaHQKICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0wIAogICAgICogQHBhcmFtIHsqfSBpZCAKICAgICAqLwogICAgYXN5bmMgbG9hZFR3ZWV0KHsKICAgICAgY29tbWl0LAogICAgICBkaXNwYXRjaAogICAgfSwgaWQpIHsKICAgICAgLy9Bc3NpZ24gbW9kaWZpZWQgdHdlZXQgdG8gc3RhdGUKICAgICAgYXdhaXQgQXBpLmdldChgdHdpdHRlci90d2VldC8ke2lkfWApLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIGNvbW1pdCgnU0FWRV9UV0VFVCcsIHJlc3VsdC5kYXRhKTsgLy9UaHJvdyBlcnJvciBpZiBuZWVkZWQKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgZGlzcGF0Y2goJ2xvYWRXaG9pcycpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJBUEkgRVJST1IiKTsKICAgICAgfSk7CiAgICB9LAoKICAgIGFzeW5jIGxvYWRXaG9pcyh7CiAgICAgIGNvbW1pdCwKICAgICAgc3RhdGUKICAgIH0pIHsKICAgICAgdmFyIHVybHMgPSBzdGF0ZS50d2VldC5lbnRpdGllcy51cmxzOwogICAgICB2YXIgd2hvaXMgPSBbXTsgLy9QZXJmb3JtcyB3aG9pcyBvbiBlYWNoIGhvc3RuYW1lIGluIFR3ZWV0CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHVybHMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgdXJsID0gdXJsc1tpXS5leHBhbmRlZF91cmw7CiAgICAgICAgdmFyIGhvc3RuYW1lOyAvL2ZpbmQgJiByZW1vdmUgcHJvdG9jb2wgKGh0dHAsIGZ0cCwgZXRjLikgYW5kIGdldCBob3N0bmFtZQoKICAgICAgICBpZiAodXJsLmluZGV4T2YoIi8vIikgPiAtMSkgewogICAgICAgICAgaG9zdG5hbWUgPSB1cmwuc3BsaXQoIi8iKVsyXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaG9zdG5hbWUgPSB1cmwuc3BsaXQoIi8iKVswXTsKICAgICAgICB9IC8vZmluZCAmIHJlbW92ZSBwb3J0IG51bWJlcgoKCiAgICAgICAgaG9zdG5hbWUgPSBob3N0bmFtZS5zcGxpdCgiOiIpWzBdOyAvL2ZpbmQgJiByZW1vdmUgIj8iCgogICAgICAgIGhvc3RuYW1lID0gaG9zdG5hbWUuc3BsaXQoIj8iKVswXTsgLy9FeHRyYWN0IGhvc3RuYW1lCgogICAgICAgIHZhciBleHRyYWN0ZWRVcmwgPSBwc2wuZ2V0KGhvc3RuYW1lKTsKICAgICAgICBjb25zb2xlLmxvZyhleHRyYWN0ZWRVcmwpOyAvL01ha2UgQVBJIGNhbGwKCiAgICAgICAgYXdhaXQgQXBpLmdldChgd2hvaXMvJHtleHRyYWN0ZWRVcmx9YCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICAvL0FkZCByZXN1bHQgdG8gYXJyYXkKICAgICAgICAgIHdob2lzLnB1c2gocmVzdWx0LmRhdGEpOwogICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiQVBJIEVSUk9SIik7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKHdob2lzKTsgLy9Bc3NpZ24gbG9jYWwgdmFyaWFibGUKCiAgICAgIGNvbW1pdCgnU0FWRV9XSE9JUycsIHdob2lzKTsKICAgIH0sCgogICAgbG9hZFR3aXR0ZXJUcmVuZHNVSygpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICBBcGkuZ2V0KGB0d2l0dGVyL3RyZW5kcy80NDQxOGApLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIHNlbGYuY29tbWl0KCdTQVZFX1RXSVRURVJfVFJFTkRTX1VLJywgcmVzdWx0LmRhdGEpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJBUEkgRVJST1IiKTsKICAgICAgfSk7CiAgICB9LAoKICAgIGxvYWRUd2l0dGVyVHJlbmRzVVMoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgQXBpLmdldChgdHdpdHRlci90cmVuZHMvMjQ1OTExNWApLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIHNlbGYuY29tbWl0KCdTQVZFX1RXSVRURVJfVFJFTkRTX1VTJywgcmVzdWx0LmRhdGEpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJBUEkgRVJST1IiKTsKICAgICAgfSk7CiAgICB9LAoKICAgIHNldFRhYih7CiAgICAgIGNvbW1pdAogICAgfSwgdGFiKSB7CiAgICAgIHRoaXMuY29tbWl0KCdTQVZFX1RBQicsIHRhYik7CiAgICB9CgogIH0KfSk7"},{"version":3,"sources":["/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/store/store.js"],"names":["Vue","Vuex","Api","psl","use","store","Store","state","rawTweet","tweet","twitterTrendsUS","twitterTrendsUK","whois","tab","Number","mutations","SAVE_RAW_TWEET","SAVE_TWEET","SAVE_TWITTER_TRENDS_US","SAVE_TWITTER_TRENDS_UK","SAVE_WHOIS","SAVE_TAB","actions","loadRawTweet","commit","id","self","get","then","result","data","catch","error","Error","loadTweet","dispatch","loadWhois","urls","entities","i","length","url","expanded_url","hostname","indexOf","split","extractedUrl","console","log","push","loadTwitterTrendsUK","loadTwitterTrendsUS","setTab"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\nimport psl from \"psl\";\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        twitterTrendsUS: [],\n        twitterTrendsUK: [],\n        whois: null,\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_TWITTER_TRENDS_US(state, twitterTrendsUS) {\n            state.twitterTrendsUS = twitterTrendsUS;\n        },\n        SAVE_TWITTER_TRENDS_UK(state, twitterTrendsUK) {\n            state.twitterTrendsUK = twitterTrendsUK;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n        * Call API to load Tweet and highlight\n        * @param {*} param0 \n        * @param {*} id \n        */\n        loadRawTweet({ commit }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        async loadTweet({ commit, dispatch }, id) {\n\n            //Assign modified tweet to state\n            await Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n                    commit('SAVE_TWEET', result.data);\n                    //Throw error if needed\n                }).then(function () {\n                    dispatch('loadWhois');\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n\n\n        },\n        async loadWhois({ commit, state }) {\n\n\n            var urls = state.tweet.entities.urls;\n            var whois = [];\n\n            //Performs whois on each hostname in Tweet\n            for (let i = 0; i < urls.length; i++) {\n\n                var url = urls[i].expanded_url;\n                var hostname;\n                //find & remove protocol (http, ftp, etc.) and get hostname\n\n                if (url.indexOf(\"//\") > -1) {\n                    hostname = url.split(\"/\")[2];\n                } else {\n                    hostname = url.split(\"/\")[0];\n                }\n\n                //find & remove port number\n                hostname = hostname.split(\":\")[0];\n                //find & remove \"?\"\n                hostname = hostname.split(\"?\")[0];\n\n                //Extract hostname\n                var extractedUrl = psl.get(hostname);\n\n                console.log(extractedUrl);\n\n                //Make API call\n                await Api.get(`whois/${extractedUrl}`)\n                    .then(function (result) {\n\n                        //Add result to array\n                        whois.push(result.data);\n                    })\n                    .catch(error => {\n                        throw new Error(\"API ERROR\");\n                    });\n            }\n            console.log(whois);\n            //Assign local variable\n            commit('SAVE_WHOIS', whois);\n        },\n        loadTwitterTrendsUK() {\n            var self = this;\n\n            Api.get(`twitter/trends/44418`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_UK', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadTwitterTrendsUS() {\n            var self = this;\n\n            Api.get(`twitter/trends/2459115`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_US', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"]}]}