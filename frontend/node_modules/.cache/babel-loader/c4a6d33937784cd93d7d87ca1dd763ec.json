{"remainingRequest":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/store/store.js","dependencies":[{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/store/store.js","mtime":1594554812736},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKaW1wb3J0IEFwaSBmcm9tICcuLi9zZXJ2aWNlcy9BcGknOwpWdWUudXNlKFZ1ZXgpOwpleHBvcnQgY29uc3Qgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIHJhd1R3ZWV0OiB7fSwKICAgIHR3ZWV0OiB7fSwKICAgIHR3aXR0ZXJUcmVuZHNVUzoge30sCiAgICB0d2l0dGVyVHJlbmRzVUs6IHt9LAogICAgd2hvaXM6IFtdLAogICAgdGFiOiBOdW1iZXIKICB9LAogIG11dGF0aW9uczogewogICAgU0FWRV9SQVdfVFdFRVQoc3RhdGUsIHJhd1R3ZWV0KSB7CiAgICAgIHN0YXRlLnJhd1R3ZWV0ID0gcmF3VHdlZXQ7CiAgICB9LAoKICAgIFNBVkVfVFdFRVQoc3RhdGUsIHR3ZWV0KSB7CiAgICAgIHN0YXRlLnR3ZWV0ID0gdHdlZXQ7CiAgICB9LAoKICAgIFNBVkVfVFdJVFRFUl9UUkVORFNfVVMoc3RhdGUsIHR3aXR0ZXJUcmVuZHNVUykgewogICAgICBzdGF0ZS50d2l0dGVyVHJlbmRzVVMgPSB0d2l0dGVyVHJlbmRzVVM7CiAgICB9LAoKICAgIFNBVkVfVFdJVFRFUl9UUkVORFNfVUsoc3RhdGUsIHR3aXR0ZXJUcmVuZHNVSykgewogICAgICBzdGF0ZS50d2l0dGVyVHJlbmRzVUsgPSB0d2l0dGVyVHJlbmRzVUs7CiAgICB9LAoKICAgIFNBVkVfV0hPSVMoc3RhdGUsIHdob2lzKSB7CiAgICAgIHN0YXRlLndob2lzID0gd2hvaXM7CiAgICB9LAoKICAgIFNBVkVfVEFCKHN0YXRlLCB0YWIpIHsKICAgICAgc3RhdGUudGFiID0gdGFiOwogICAgfQoKICB9LAogIGFjdGlvbnM6IHsKICAgIC8qKgogICAgKiBDYWxsIEFQSSB0byBsb2FkIFR3ZWV0IGFuZCBoaWdobGlnaHQKICAgICogQHBhcmFtIHsqfSBwYXJhbTAgCiAgICAqIEBwYXJhbSB7Kn0gaWQgCiAgICAqLwogICAgbG9hZFJhd1R3ZWV0KHsKICAgICAgY29tbWl0CiAgICB9LCBpZCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7IC8vTWFrZSBBUEkgY2FsbAoKICAgICAgQXBpLmdldChgdHdpdHRlci90d2VldC8ke2lkfWApLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIHNlbGYuY29tbWl0KCdTQVZFX1JBV19UV0VFVCcsIHJlc3VsdC5kYXRhKTsgLy9UaHJvdyBlcnJvciBpZiBuZWVkZWQKICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIHRocm93IG5ldyBFcnJvcigiQVBJIEVSUk9SIik7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIENhbGwgQVBJIHRvIGxvYWQgVHdlZXQgYW5kIGhpZ2hsaWdodAogICAgICogQHBhcmFtIHsqfSBwYXJhbTAgCiAgICAgKiBAcGFyYW0geyp9IGlkIAogICAgICovCiAgICBsb2FkVHdlZXQoewogICAgICBjb21taXQsCiAgICAgIHN0YXRlCiAgICB9LCBpZCkgewogICAgICB2YXIgc2VsZiA9IHRoaXM7IC8vTWFrZSBBUEkgY2FsbAoKICAgICAgQXBpLmdldChgdHdpdHRlci90d2VldC8ke2lkfWApLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIC8vU2V0IHZhcmlhYmxlcwogICAgICAgIHZhciB0d2VldCA9IHJlc3VsdC5kYXRhOwogICAgICAgIGNvbnN0IHVybHMgPSB0d2VldC5lbnRpdGllcy51cmxzOwogICAgICAgIGNvbnN0IGhhc2h0YWdzID0gdHdlZXQuZW50aXRpZXMuaGFzaHRhZ3M7IC8vRm9yIGVhY2ggVVJMLCByZXBsYWNlIGl0IHdpdGggaGlnaGxpZ2h0ZWQgdmVyc2lvbgoKICAgICAgICBmb3IgKGxldCBpIGluIHVybHMpIHsKICAgICAgICAgIHR3ZWV0LmZ1bGxfdGV4dCA9IHR3ZWV0LmZ1bGxfdGV4dC5yZXBsYWNlKHVybHNbaV0udXJsLCBgPHNwYW4gY2xhc3M9ImhpZ2hsaWdodFVSTCI+JHt1cmxzW2ldLmV4cGFuZGVkX3VybH08L3NwYW4+YCk7CiAgICAgICAgfSAvL0ZvciBlYWNoIGhhc2h0YWcsIHJlcGxhY2UgaXQgd2l0aCBoaWdobGlnaHRlZCB2ZXJzaW9uCgoKICAgICAgICBmb3IgKGxldCBpIGluIGhhc2h0YWdzKSB7CiAgICAgICAgICB0d2VldC5mdWxsX3RleHQgPSB0d2VldC5mdWxsX3RleHQucmVwbGFjZSgiIyIgKyBoYXNodGFnc1tpXS50ZXh0LCBgPHNwYW4gY2xhc3M9ImhpZ2hsaWdodEhhc2h0YWciPiMke2hhc2h0YWdzW2ldLnRleHR9PC9zcGFuPmApOwogICAgICAgIH0gLy9Bc3NpZ24gbW9kaWZpZWQgdHdlZXQgdG8gc3RhdGUKCgogICAgICAgIHNlbGYuY29tbWl0KCdTQVZFX1RXRUVUJywgdHdlZXQpOyAvL1Rocm93IGVycm9yIGlmIG5lZWRlZAogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJBUEkgRVJST1IiKTsKICAgICAgfSk7CiAgICB9LAoKICAgIGxvYWRUd2l0dGVyVHJlbmRzVUsoKSB7CiAgICAgIEFwaS5nZXQoYHR3aXR0ZXIvdHJlbmRzLzQ0NDE4YCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgc2VsZi5jb21taXQoJ1NBVkVfVFdJVFRFUl9UUkVORFNfVUsnLCByZXN1bHQuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkFQSSBFUlJPUiIpOwogICAgICB9KTsKICAgIH0sCgogICAgbG9hZFR3aXR0ZXJUcmVuZHNVUygpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICBBcGkuZ2V0KGB0d2l0dGVyL3RyZW5kcy8yNDU5MTE1YCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgc2VsZi5jb21taXQoJ1NBVkVfVFdJVFRFUl9UUkVORFNfVVMnLCByZXN1bHQuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkFQSSBFUlJPUiIpOwogICAgICB9KTsKICAgIH0sCgogICAgc2V0VGFiKHsKICAgICAgY29tbWl0CiAgICB9LCB0YWIpIHsKICAgICAgdGhpcy5jb21taXQoJ1NBVkVfVEFCJywgdGFiKTsKICAgIH0KCiAgfQp9KTs="},{"version":3,"sources":["/Users/jamesbradford/Documents/Dissertation Repository/Repos/Combined/frontend/src/store/store.js"],"names":["Vue","Vuex","Api","use","store","Store","state","rawTweet","tweet","twitterTrendsUS","twitterTrendsUK","whois","tab","Number","mutations","SAVE_RAW_TWEET","SAVE_TWEET","SAVE_TWITTER_TRENDS_US","SAVE_TWITTER_TRENDS_UK","SAVE_WHOIS","SAVE_TAB","actions","loadRawTweet","commit","id","self","get","then","result","data","catch","error","Error","loadTweet","urls","entities","hashtags","i","full_text","replace","url","expanded_url","text","loadTwitterTrendsUK","loadTwitterTrendsUS","setTab"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Api from '../services/Api'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n    state: {\n        rawTweet: {},\n        tweet: {},\n        twitterTrendsUS: {},\n        twitterTrendsUK: {},\n        whois: [],\n        tab: Number\n    },\n    mutations: {\n        SAVE_RAW_TWEET(state, rawTweet) {\n            state.rawTweet = rawTweet;\n        },\n        SAVE_TWEET(state, tweet) {\n            state.tweet = tweet;\n        },\n        SAVE_TWITTER_TRENDS_US(state, twitterTrendsUS) {\n            state.twitterTrendsUS = twitterTrendsUS;\n        },\n        SAVE_TWITTER_TRENDS_UK(state, twitterTrendsUK) {\n            state.twitterTrendsUK = twitterTrendsUK;\n        },\n        SAVE_WHOIS(state, whois) {\n            state.whois = whois;\n        },\n        SAVE_TAB(state, tab) {\n            state.tab = tab;\n        }\n    },\n    actions: {\n        /**\n        * Call API to load Tweet and highlight\n        * @param {*} param0 \n        * @param {*} id \n        */\n        loadRawTweet({ commit }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n\n                    self.commit('SAVE_RAW_TWEET', result.data)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        /**\n         * Call API to load Tweet and highlight\n         * @param {*} param0 \n         * @param {*} id \n         */\n        loadTweet({ commit, state }, id) {\n            var self = this;\n\n            //Make API call\n            Api.get(`twitter/tweet/${id}`)\n                .then(function (result) {\n                    //Set variables\n                    var tweet = result.data;\n                    const urls = tweet.entities.urls;\n                    const hashtags = tweet.entities.hashtags;\n\n                    //For each URL, replace it with highlighted version\n                    for (let i in urls) {\n                        tweet.full_text = tweet.full_text.replace(urls[i].url, `<span class=\"highlightURL\">${urls[i].expanded_url}</span>`);\n                    }\n\n                    //For each hashtag, replace it with highlighted version\n                    for (let i in hashtags) {\n                        tweet.full_text = tweet.full_text.replace(\"#\" + hashtags[i].text, `<span class=\"highlightHashtag\">#${hashtags[i].text}</span>`)\n                    }\n\n                    //Assign modified tweet to state\n                    self.commit('SAVE_TWEET', tweet)\n\n                    //Throw error if needed\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadTwitterTrendsUK() {\n            Api.get(`twitter/trends/44418`)\n                .then(function (result) {\n                    self.commit('SAVE_TWITTER_TRENDS_UK', result.data);\n                }).catch(error => {\n                    throw new Error(\"API ERROR\");\n                });\n        },\n        loadTwitterTrendsUS() {\n            var self = this;\n\n            Api.get(`twitter/trends/2459115`)\n            .then(function (result) {\n                self.commit('SAVE_TWITTER_TRENDS_US', result.data);\n            }).catch(error => {\n                throw new Error(\"API ERROR\");\n            });\n        },\n        setTab({ commit }, tab) {\n            this.commit('SAVE_TAB', tab);\n        }\n    }\n});"]}]}